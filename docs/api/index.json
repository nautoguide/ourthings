[
  {
    "__docId__": 1,
    "kind": "external",
    "name": "Infinity",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Infinity",
    "memberof": "ourthings/.external-ecmascript.js",
    "static": true,
    "longname": "ourthings/.external-ecmascript.js~Infinity",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 2,
    "kind": "external",
    "name": "NaN",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/NaN",
    "memberof": "ourthings/.external-ecmascript.js",
    "static": true,
    "longname": "ourthings/.external-ecmascript.js~NaN",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 3,
    "kind": "external",
    "name": "undefined",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/undefined",
    "memberof": "ourthings/.external-ecmascript.js",
    "static": true,
    "longname": "ourthings/.external-ecmascript.js~undefined",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 4,
    "kind": "external",
    "name": "null",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/null",
    "memberof": "ourthings/.external-ecmascript.js",
    "static": true,
    "longname": "ourthings/.external-ecmascript.js~null",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 5,
    "kind": "external",
    "name": "Object",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object",
    "memberof": "ourthings/.external-ecmascript.js",
    "static": true,
    "longname": "ourthings/.external-ecmascript.js~Object",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 6,
    "kind": "external",
    "name": "object",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object",
    "memberof": "ourthings/.external-ecmascript.js",
    "static": true,
    "longname": "ourthings/.external-ecmascript.js~object",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 7,
    "kind": "external",
    "name": "Function",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function",
    "memberof": "ourthings/.external-ecmascript.js",
    "static": true,
    "longname": "ourthings/.external-ecmascript.js~Function",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 8,
    "kind": "external",
    "name": "function",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function",
    "memberof": "ourthings/.external-ecmascript.js",
    "static": true,
    "longname": "ourthings/.external-ecmascript.js~function",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 9,
    "kind": "external",
    "name": "Boolean",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Boolean",
    "memberof": "ourthings/.external-ecmascript.js",
    "static": true,
    "longname": "ourthings/.external-ecmascript.js~Boolean",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 10,
    "kind": "external",
    "name": "boolean",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Boolean",
    "memberof": "ourthings/.external-ecmascript.js",
    "static": true,
    "longname": "ourthings/.external-ecmascript.js~boolean",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 11,
    "kind": "external",
    "name": "Symbol",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Symbol",
    "memberof": "ourthings/.external-ecmascript.js",
    "static": true,
    "longname": "ourthings/.external-ecmascript.js~Symbol",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 12,
    "kind": "external",
    "name": "Error",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Error",
    "memberof": "ourthings/.external-ecmascript.js",
    "static": true,
    "longname": "ourthings/.external-ecmascript.js~Error",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 13,
    "kind": "external",
    "name": "EvalError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/EvalError",
    "memberof": "ourthings/.external-ecmascript.js",
    "static": true,
    "longname": "ourthings/.external-ecmascript.js~EvalError",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 14,
    "kind": "external",
    "name": "InternalError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/InternalError",
    "memberof": "ourthings/.external-ecmascript.js",
    "static": true,
    "longname": "ourthings/.external-ecmascript.js~InternalError",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 15,
    "kind": "external",
    "name": "RangeError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/RangeError",
    "memberof": "ourthings/.external-ecmascript.js",
    "static": true,
    "longname": "ourthings/.external-ecmascript.js~RangeError",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 16,
    "kind": "external",
    "name": "ReferenceError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/ReferenceError",
    "memberof": "ourthings/.external-ecmascript.js",
    "static": true,
    "longname": "ourthings/.external-ecmascript.js~ReferenceError",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 17,
    "kind": "external",
    "name": "SyntaxError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/SyntaxError",
    "memberof": "ourthings/.external-ecmascript.js",
    "static": true,
    "longname": "ourthings/.external-ecmascript.js~SyntaxError",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 18,
    "kind": "external",
    "name": "TypeError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/TypeError",
    "memberof": "ourthings/.external-ecmascript.js",
    "static": true,
    "longname": "ourthings/.external-ecmascript.js~TypeError",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 19,
    "kind": "external",
    "name": "URIError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/URIError",
    "memberof": "ourthings/.external-ecmascript.js",
    "static": true,
    "longname": "ourthings/.external-ecmascript.js~URIError",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 20,
    "kind": "external",
    "name": "Number",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number",
    "memberof": "ourthings/.external-ecmascript.js",
    "static": true,
    "longname": "ourthings/.external-ecmascript.js~Number",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 21,
    "kind": "external",
    "name": "number",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number",
    "memberof": "ourthings/.external-ecmascript.js",
    "static": true,
    "longname": "ourthings/.external-ecmascript.js~number",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 22,
    "kind": "external",
    "name": "Date",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date",
    "memberof": "ourthings/.external-ecmascript.js",
    "static": true,
    "longname": "ourthings/.external-ecmascript.js~Date",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 23,
    "kind": "external",
    "name": "String",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String",
    "memberof": "ourthings/.external-ecmascript.js",
    "static": true,
    "longname": "ourthings/.external-ecmascript.js~String",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 24,
    "kind": "external",
    "name": "string",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String",
    "memberof": "ourthings/.external-ecmascript.js",
    "static": true,
    "longname": "ourthings/.external-ecmascript.js~string",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 25,
    "kind": "external",
    "name": "RegExp",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/RegExp",
    "memberof": "ourthings/.external-ecmascript.js",
    "static": true,
    "longname": "ourthings/.external-ecmascript.js~RegExp",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 26,
    "kind": "external",
    "name": "Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array",
    "memberof": "ourthings/.external-ecmascript.js",
    "static": true,
    "longname": "ourthings/.external-ecmascript.js~Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 27,
    "kind": "external",
    "name": "Int8Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Int8Array",
    "memberof": "ourthings/.external-ecmascript.js",
    "static": true,
    "longname": "ourthings/.external-ecmascript.js~Int8Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 28,
    "kind": "external",
    "name": "Uint8Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Uint8Array",
    "memberof": "ourthings/.external-ecmascript.js",
    "static": true,
    "longname": "ourthings/.external-ecmascript.js~Uint8Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 29,
    "kind": "external",
    "name": "Uint8ClampedArray",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Uint8ClampedArray",
    "memberof": "ourthings/.external-ecmascript.js",
    "static": true,
    "longname": "ourthings/.external-ecmascript.js~Uint8ClampedArray",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 30,
    "kind": "external",
    "name": "Int16Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Int16Array",
    "memberof": "ourthings/.external-ecmascript.js",
    "static": true,
    "longname": "ourthings/.external-ecmascript.js~Int16Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 31,
    "kind": "external",
    "name": "Uint16Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Uint16Array",
    "memberof": "ourthings/.external-ecmascript.js",
    "static": true,
    "longname": "ourthings/.external-ecmascript.js~Uint16Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 32,
    "kind": "external",
    "name": "Int32Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Int32Array",
    "memberof": "ourthings/.external-ecmascript.js",
    "static": true,
    "longname": "ourthings/.external-ecmascript.js~Int32Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 33,
    "kind": "external",
    "name": "Uint32Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Uint32Array",
    "memberof": "ourthings/.external-ecmascript.js",
    "static": true,
    "longname": "ourthings/.external-ecmascript.js~Uint32Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 34,
    "kind": "external",
    "name": "Float32Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Float32Array",
    "memberof": "ourthings/.external-ecmascript.js",
    "static": true,
    "longname": "ourthings/.external-ecmascript.js~Float32Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 35,
    "kind": "external",
    "name": "Float64Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Float64Array",
    "memberof": "ourthings/.external-ecmascript.js",
    "static": true,
    "longname": "ourthings/.external-ecmascript.js~Float64Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 36,
    "kind": "external",
    "name": "Map",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Map",
    "memberof": "ourthings/.external-ecmascript.js",
    "static": true,
    "longname": "ourthings/.external-ecmascript.js~Map",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 37,
    "kind": "external",
    "name": "Set",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Set",
    "memberof": "ourthings/.external-ecmascript.js",
    "static": true,
    "longname": "ourthings/.external-ecmascript.js~Set",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 38,
    "kind": "external",
    "name": "WeakMap",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/WeakMap",
    "memberof": "ourthings/.external-ecmascript.js",
    "static": true,
    "longname": "ourthings/.external-ecmascript.js~WeakMap",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 39,
    "kind": "external",
    "name": "WeakSet",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/WeakSet",
    "memberof": "ourthings/.external-ecmascript.js",
    "static": true,
    "longname": "ourthings/.external-ecmascript.js~WeakSet",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 40,
    "kind": "external",
    "name": "ArrayBuffer",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/ArrayBuffer",
    "memberof": "ourthings/.external-ecmascript.js",
    "static": true,
    "longname": "ourthings/.external-ecmascript.js~ArrayBuffer",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 41,
    "kind": "external",
    "name": "DataView",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/DataView",
    "memberof": "ourthings/.external-ecmascript.js",
    "static": true,
    "longname": "ourthings/.external-ecmascript.js~DataView",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 42,
    "kind": "external",
    "name": "JSON",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/JSON",
    "memberof": "ourthings/.external-ecmascript.js",
    "static": true,
    "longname": "ourthings/.external-ecmascript.js~JSON",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 43,
    "kind": "external",
    "name": "Promise",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise",
    "memberof": "ourthings/.external-ecmascript.js",
    "static": true,
    "longname": "ourthings/.external-ecmascript.js~Promise",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 44,
    "kind": "external",
    "name": "Generator",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Generator",
    "memberof": "ourthings/.external-ecmascript.js",
    "static": true,
    "longname": "ourthings/.external-ecmascript.js~Generator",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 45,
    "kind": "external",
    "name": "GeneratorFunction",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/GeneratorFunction",
    "memberof": "ourthings/.external-ecmascript.js",
    "static": true,
    "longname": "ourthings/.external-ecmascript.js~GeneratorFunction",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 46,
    "kind": "external",
    "name": "Reflect",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Reflect",
    "memberof": "ourthings/.external-ecmascript.js",
    "static": true,
    "longname": "ourthings/.external-ecmascript.js~Reflect",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 47,
    "kind": "external",
    "name": "Proxy",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Proxy",
    "memberof": "ourthings/.external-ecmascript.js",
    "static": true,
    "longname": "ourthings/.external-ecmascript.js~Proxy",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 48,
    "kind": "file",
    "name": "ourthings/Define.js",
    "content": "/** @module Define */\r\n\r\n\r\n/**\r\n * @classdesc\r\n *\r\n * Our define class, contains all magic dnumber defines\r\n *\r\n * @author Richard Reynolds richard@nautoguide.com\r\n *\r\n * @example\r\n * // DEFINE = new Define();\r\n *\r\n */\r\nexport default class Define {\r\n\tconstructor() {\r\n\t\t/**\r\n\t\t * Queue state of operations\r\n\t\t */\r\n\t\tthis.STATUS_LOADING = 0;\r\n\t\tthis.STATUS_LOADED = 1;\r\n\t\tthis.STATUS_RUNNING = 2;\r\n\t\tthis.STATUS_ERROR = 3;\r\n\r\n\t\t/**\r\n\t\t * Render modes\r\n\t\t */\r\n\t\tthis.RENDER_INSERT = 0;\r\n\t\tthis.RENDER_APPEND = 1;\r\n\r\n\r\n\t\t/**\r\n\t\t *  Command types\r\n\t\t */\r\n\r\n\t\tthis.COMMAND_INSTANT = \"Instant\";\r\n\t\tthis.COMMAND_EVENT = \"Event\";\r\n\t\tthis.COMMAND_SUB = \"Sub\";\r\n\r\n\t\t/**\r\n\t\t *  Queue states\r\n\t\t */\r\n\t\tthis.QUEUE_ADDED = 0;\r\n\t\tthis.QUEUE_RUNNING = 1;\r\n\t\tthis.QUEUE_FINISHED = 2;\r\n\t\tthis.QUEUE_ERROR = 3;\r\n\r\n\t\t/**\r\n\t\t * Queueable Finished states\r\n\t\t */\r\n\r\n\t\tthis.FIN_OK = 0;\r\n\t\tthis.FIN_WARNING = 1;\r\n\t\tthis.FIN_ERROR = 2;\r\n\r\n\t\tthis.MEMORY_GARBAGE=\"Garbage\";\r\n\t\tthis.MEMORY_SESSION=\"Session\";\r\n\t\tthis.MEMORY_PERMANENT=\"Permanent\";\r\n\r\n\t\t/**\r\n\t\t *  Console outputs\r\n\t\t */\r\n\t\tthis.CONSOLE_LINE=\"-==ourthings======================================================-\";\r\n\t\tthis.CONSOLE_COL_VT=\"background: #222; color: #bada55\";\r\n\t\tthis.CONSOLE_COL_GREEN=\"background: #222; color: #0f0\";\r\n\t\tthis.CONSOLE_COL_RED=\"background: #222; color: #f00\";\r\n\t\tthis.CONSOLE_COL_AMBER=\"background: #222; color: #f90\";\r\n\r\n\t}\r\n}",
    "static": true,
    "longname": "C:/Users/xrout/Dropbox/machine/Work/webstorm/ourthings/src/ourthings/Define.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 49,
    "kind": "class",
    "name": "Define",
    "memberof": "ourthings/Define.js",
    "static": true,
    "longname": "ourthings/Define.js~Define",
    "access": "public",
    "export": true,
    "importPath": "@nautoguide/ourthings/ourthings/Define.js",
    "importStyle": "Define",
    "description": "",
    "examples": [
      "// DEFINE = new Define();"
    ],
    "lineNumber": 15,
    "unknown": [
      {
        "tagName": "@classdesc",
        "tagValue": "\nOur define class, contains all magic dnumber defines"
      },
      {
        "tagName": "@author",
        "tagValue": "Richard Reynolds richard@nautoguide.com"
      }
    ],
    "interface": false
  },
  {
    "__docId__": 50,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "ourthings/Define.js~Define",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "ourthings/Define.js~Define#constructor",
    "access": "public",
    "description": null,
    "lineNumber": 16,
    "undocument": true
  },
  {
    "__docId__": 51,
    "kind": "member",
    "name": "STATUS_LOADING",
    "memberof": "ourthings/Define.js~Define",
    "static": false,
    "longname": "ourthings/Define.js~Define#STATUS_LOADING",
    "access": "public",
    "description": "Queue state of operations",
    "lineNumber": 20,
    "type": {
      "types": [
        "number"
      ]
    }
  },
  {
    "__docId__": 52,
    "kind": "member",
    "name": "STATUS_LOADED",
    "memberof": "ourthings/Define.js~Define",
    "static": false,
    "longname": "ourthings/Define.js~Define#STATUS_LOADED",
    "access": "public",
    "description": null,
    "lineNumber": 21,
    "undocument": true,
    "type": {
      "types": [
        "number"
      ]
    }
  },
  {
    "__docId__": 53,
    "kind": "member",
    "name": "STATUS_RUNNING",
    "memberof": "ourthings/Define.js~Define",
    "static": false,
    "longname": "ourthings/Define.js~Define#STATUS_RUNNING",
    "access": "public",
    "description": null,
    "lineNumber": 22,
    "undocument": true,
    "type": {
      "types": [
        "number"
      ]
    }
  },
  {
    "__docId__": 54,
    "kind": "member",
    "name": "STATUS_ERROR",
    "memberof": "ourthings/Define.js~Define",
    "static": false,
    "longname": "ourthings/Define.js~Define#STATUS_ERROR",
    "access": "public",
    "description": null,
    "lineNumber": 23,
    "undocument": true,
    "type": {
      "types": [
        "number"
      ]
    }
  },
  {
    "__docId__": 55,
    "kind": "member",
    "name": "RENDER_INSERT",
    "memberof": "ourthings/Define.js~Define",
    "static": false,
    "longname": "ourthings/Define.js~Define#RENDER_INSERT",
    "access": "public",
    "description": "Render modes",
    "lineNumber": 28,
    "type": {
      "types": [
        "number"
      ]
    }
  },
  {
    "__docId__": 56,
    "kind": "member",
    "name": "RENDER_APPEND",
    "memberof": "ourthings/Define.js~Define",
    "static": false,
    "longname": "ourthings/Define.js~Define#RENDER_APPEND",
    "access": "public",
    "description": null,
    "lineNumber": 29,
    "undocument": true,
    "type": {
      "types": [
        "number"
      ]
    }
  },
  {
    "__docId__": 57,
    "kind": "member",
    "name": "COMMAND_INSTANT",
    "memberof": "ourthings/Define.js~Define",
    "static": false,
    "longname": "ourthings/Define.js~Define#COMMAND_INSTANT",
    "access": "public",
    "description": " Command types",
    "lineNumber": 36,
    "type": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 58,
    "kind": "member",
    "name": "COMMAND_EVENT",
    "memberof": "ourthings/Define.js~Define",
    "static": false,
    "longname": "ourthings/Define.js~Define#COMMAND_EVENT",
    "access": "public",
    "description": null,
    "lineNumber": 37,
    "undocument": true,
    "type": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 59,
    "kind": "member",
    "name": "COMMAND_SUB",
    "memberof": "ourthings/Define.js~Define",
    "static": false,
    "longname": "ourthings/Define.js~Define#COMMAND_SUB",
    "access": "public",
    "description": null,
    "lineNumber": 38,
    "undocument": true,
    "type": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 60,
    "kind": "member",
    "name": "QUEUE_ADDED",
    "memberof": "ourthings/Define.js~Define",
    "static": false,
    "longname": "ourthings/Define.js~Define#QUEUE_ADDED",
    "access": "public",
    "description": " Queue states",
    "lineNumber": 43,
    "type": {
      "types": [
        "number"
      ]
    }
  },
  {
    "__docId__": 61,
    "kind": "member",
    "name": "QUEUE_RUNNING",
    "memberof": "ourthings/Define.js~Define",
    "static": false,
    "longname": "ourthings/Define.js~Define#QUEUE_RUNNING",
    "access": "public",
    "description": null,
    "lineNumber": 44,
    "undocument": true,
    "type": {
      "types": [
        "number"
      ]
    }
  },
  {
    "__docId__": 62,
    "kind": "member",
    "name": "QUEUE_FINISHED",
    "memberof": "ourthings/Define.js~Define",
    "static": false,
    "longname": "ourthings/Define.js~Define#QUEUE_FINISHED",
    "access": "public",
    "description": null,
    "lineNumber": 45,
    "undocument": true,
    "type": {
      "types": [
        "number"
      ]
    }
  },
  {
    "__docId__": 63,
    "kind": "member",
    "name": "QUEUE_ERROR",
    "memberof": "ourthings/Define.js~Define",
    "static": false,
    "longname": "ourthings/Define.js~Define#QUEUE_ERROR",
    "access": "public",
    "description": null,
    "lineNumber": 46,
    "undocument": true,
    "type": {
      "types": [
        "number"
      ]
    }
  },
  {
    "__docId__": 64,
    "kind": "member",
    "name": "FIN_OK",
    "memberof": "ourthings/Define.js~Define",
    "static": false,
    "longname": "ourthings/Define.js~Define#FIN_OK",
    "access": "public",
    "description": "Queueable Finished states",
    "lineNumber": 52,
    "type": {
      "types": [
        "number"
      ]
    }
  },
  {
    "__docId__": 65,
    "kind": "member",
    "name": "FIN_WARNING",
    "memberof": "ourthings/Define.js~Define",
    "static": false,
    "longname": "ourthings/Define.js~Define#FIN_WARNING",
    "access": "public",
    "description": null,
    "lineNumber": 53,
    "undocument": true,
    "type": {
      "types": [
        "number"
      ]
    }
  },
  {
    "__docId__": 66,
    "kind": "member",
    "name": "FIN_ERROR",
    "memberof": "ourthings/Define.js~Define",
    "static": false,
    "longname": "ourthings/Define.js~Define#FIN_ERROR",
    "access": "public",
    "description": null,
    "lineNumber": 54,
    "undocument": true,
    "type": {
      "types": [
        "number"
      ]
    }
  },
  {
    "__docId__": 67,
    "kind": "member",
    "name": "MEMORY_GARBAGE",
    "memberof": "ourthings/Define.js~Define",
    "static": false,
    "longname": "ourthings/Define.js~Define#MEMORY_GARBAGE",
    "access": "public",
    "description": null,
    "lineNumber": 56,
    "undocument": true,
    "type": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 68,
    "kind": "member",
    "name": "MEMORY_SESSION",
    "memberof": "ourthings/Define.js~Define",
    "static": false,
    "longname": "ourthings/Define.js~Define#MEMORY_SESSION",
    "access": "public",
    "description": null,
    "lineNumber": 57,
    "undocument": true,
    "type": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 69,
    "kind": "member",
    "name": "MEMORY_PERMANENT",
    "memberof": "ourthings/Define.js~Define",
    "static": false,
    "longname": "ourthings/Define.js~Define#MEMORY_PERMANENT",
    "access": "public",
    "description": null,
    "lineNumber": 58,
    "undocument": true,
    "type": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 70,
    "kind": "member",
    "name": "CONSOLE_LINE",
    "memberof": "ourthings/Define.js~Define",
    "static": false,
    "longname": "ourthings/Define.js~Define#CONSOLE_LINE",
    "access": "public",
    "description": " Console outputs",
    "lineNumber": 63,
    "type": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 71,
    "kind": "member",
    "name": "CONSOLE_COL_VT",
    "memberof": "ourthings/Define.js~Define",
    "static": false,
    "longname": "ourthings/Define.js~Define#CONSOLE_COL_VT",
    "access": "public",
    "description": null,
    "lineNumber": 64,
    "undocument": true,
    "type": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 72,
    "kind": "member",
    "name": "CONSOLE_COL_GREEN",
    "memberof": "ourthings/Define.js~Define",
    "static": false,
    "longname": "ourthings/Define.js~Define#CONSOLE_COL_GREEN",
    "access": "public",
    "description": null,
    "lineNumber": 65,
    "undocument": true,
    "type": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 73,
    "kind": "member",
    "name": "CONSOLE_COL_RED",
    "memberof": "ourthings/Define.js~Define",
    "static": false,
    "longname": "ourthings/Define.js~Define#CONSOLE_COL_RED",
    "access": "public",
    "description": null,
    "lineNumber": 66,
    "undocument": true,
    "type": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 74,
    "kind": "member",
    "name": "CONSOLE_COL_AMBER",
    "memberof": "ourthings/Define.js~Define",
    "static": false,
    "longname": "ourthings/Define.js~Define#CONSOLE_COL_AMBER",
    "access": "public",
    "description": null,
    "lineNumber": 67,
    "undocument": true,
    "type": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 75,
    "kind": "file",
    "name": "ourthings/index.js",
    "content": "/**\r\n * @module ourthings\r\n */\r\n\r\nexport {default as Queue} from './Queue';\r\nexport {default as Queueable} from './Queueable';\r\n",
    "static": true,
    "longname": "C:/Users/xrout/Dropbox/machine/Work/webstorm/ourthings/src/ourthings/index.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 76,
    "kind": "file",
    "name": "ourthings/main.js",
    "content": "import Queue from './Queue';\r\n\r\n/**\r\n *  Import all the queueables we want to use here. Make sure to add an entry to to new queue to map the commands\r\n *\r\n */\r\nimport Internals from './Queueable/Internals';\r\nimport Templates from './Queueable/Templates';\r\nimport Elements from './Queueable/Elements';\r\nimport Api from './Queueable/Api';\r\nimport Openlayers from './Queueable/Openlayers';\r\nimport Browser from './Queueable/Browser';\r\nimport W3Menu from './Queueable/W3Menu';\r\n\r\n/*\r\n * Start the queue engine\r\n */\r\nlet queue;\r\n/*\r\n * Wait until the dom is loaded (IE11 will not have the dom in place before it starts running scripts\r\n */\r\ndocument.addEventListener(\"DOMContentLoaded\", function(event) {\r\n\tqueue = new Queue({\r\n\t\t\"internals\": Internals,\r\n\t\t\"templates\": Templates,\r\n\t\t\"elements\": Elements,\r\n\t\t\"api\": Api,\r\n\t\t\"openlayers\": Openlayers,\r\n\t\t\"browser\": Browser,\r\n\t\t\"w3menu\": W3Menu\r\n\t});\r\n\twindow.queue = queue;\r\n});\r\n",
    "static": true,
    "longname": "C:/Users/xrout/Dropbox/machine/Work/webstorm/ourthings/src/ourthings/main.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 77,
    "kind": "file",
    "name": "ourthings/Queue.js",
    "content": "/** @module ourthings/Queue */\r\nimport Define from './Define.js';\r\n\r\n/**\r\n * @classdesc\r\n *\r\n * The main queue class\r\n *\r\n * @author Richard Reynolds richard@nautoguide.com\r\n *\r\n * @example\r\n * let queue = new Queue();\r\n */\r\nclass Queue {\r\n\r\n\t/**\r\n\t * Class constructor\r\n\t */\r\n\tconstructor(queueablesList) {\r\n\r\n\t\tlet self = this;\r\n\r\n\t\t/*\r\n\t\t * Create our DEFINE object for\r\n\t\t * @type {Define}\r\n\t\t */\r\n\t\tself.DEFINE = new Define();\r\n\t\t/*\r\n\t\t * Our Queue array\r\n\t\t *\r\n\t\t * @type {Array}\r\n\t\t */\r\n\t\tself.queue = [];\r\n\r\n\t\t/*\r\n\t\t * Our events (queues) which can be called by name\r\n\t\t */\r\n\t\tself.prepare = {};\r\n\r\n\r\n\t\t/*\r\n\t\t * Queueable items object\r\n\t\t */\r\n\t\tself.queueables={};\r\n\t\t/*\r\n\t\t * Templates to be loaded\r\n\t\t * @type {Array}\r\n\t\t */\r\n\t\tself.templates = [];\r\n\r\n\r\n\t\t/*\r\n\t\t * Create a fragment for big dom inserts\r\n\t\t * @type {DocumentFragment}\r\n\t\t */\r\n\t\tself.fragment = document.createDocumentFragment();\r\n\r\n\t\t/*\r\n\t\t * Se our status\r\n\t\t * @type {number}\r\n\t\t */\r\n\t\tself.status = self.DEFINE.STATUS_LOADING;\r\n\r\n\t\t/*\r\n\t\t * Our queue process ID\r\n\t\t * @type {number}\r\n\t\t */\r\n\t\tself.pid = 0;\r\n\r\n\t\t/*\r\n\t\t * Our unique bind ids\r\n\t\t */\r\n\t\tself.ucid = 0;\r\n\r\n\t\t/*\r\n\t\t * Default time for process to be executed after\r\n\t\t * TODO Platform test / tune\r\n\t\t * @type {number}\r\n\t\t */\r\n\t\tself.defaultTimer = 10;\r\n\r\n\r\n\t\t//console.clear();\r\n\t\tconsole.info(self.DEFINE.CONSOLE_LINE);\r\n\t\tconsole.info('ourthings framework https://github.com/nautoguide/ourthings');\r\n\r\n\t\tself.browserClasses();\r\n\r\n\t\t/*\r\n\t\t * Run init against all our queueables\r\n\t\t *\r\n\t\t * This basically passes the queue object (self) though but also for any queueables that require it\r\n\t\t * starts any promise functions that will result in them becoming active\r\n\t\t */\r\n\t\tconsole.log(\"[Queueables]\");\r\n\t\tfor (let i in queueablesList) {\r\n\t\t\tself.checkQueueable(i,queueablesList[i]);\r\n\t\t}\r\n\r\n\t\t/*\r\n\t\t * Initialise the memory\r\n\t\t */\r\n\t\twindow.memory={};\r\n\r\n\t\t/*\r\n\t\t * Load any perm cookies\r\n\t\t */\r\n\t\tself._loadMemoryPerms();\r\n\r\n\t\t/*\r\n\t\t * Load any url params into memoery\r\n\t\t */\r\n\r\n\t\tself.setMemory(\"urlParams\",self.urlToJson(),\"Session\");\r\n\r\n\t\t/*\r\n\t\t * Load the templates.json\r\n\t\t *\r\n\t\t * This can now be specified by data-templates on the script include\r\n\t\t */\r\n\t\tlet templateInclude=\"templates.json\";\r\n\r\n\t\tlet attr=self.getElement(\"script[data-templates]\",false);\r\n\t\tif(attr&&attr.getAttribute( \"data-templates\" )) {\r\n\t\t\ttemplateInclude=attr.getAttribute( \"data-templates\" );\r\n\t\t}\r\n\r\n\t\tfetch(templateInclude, {\r\n\t\t\theaders: {\r\n\t\t\t\t'Content-Type': 'application/json'\r\n\t\t\t}\r\n\t\t})\r\n\t\t\t.then(response => self.handleFetchErrors(response))\r\n\t\t\t.then(response => response.json() )\r\n\t\t\t.then(function (response) {\r\n\t\t\t\t/**\r\n\t\t\t\t * Convert the response to json and start the loader\r\n\t\t\t\t */\r\n\t\t\t\tself.templates = response;\r\n\t\t\t\tself.templateLoader();\r\n\t\t\t})\r\n\t\t\t.catch(function (error) {\r\n\t\t\t\tconsole.info(self.DEFINE.CONSOLE_LINE);\r\n\t\t\t\tconsole.error('Error:', error);\r\n\t\t\t\tconsole.info(\"Warning this error is probably fatal as I have no templates to load\")\r\n\t\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Error Handler for fetch calls\r\n\t * @param response {object} - Fetch response object\r\n\t * @returns {Object}\r\n\t */\r\n\thandleFetchErrors(response) {\r\n\t\tif (!response.ok) {\r\n\t\t\tself.status=self.DEFINE.STATUS_ERROR;\r\n\t\t\tthrow Error(response.statusText);\r\n\t\t}\r\n\t\treturn response;\r\n\t}\r\n\r\n\tcheckQueueable(name,obj) {\r\n\t\tlet self=this;\r\n\t\tif(self.queueables[name]===undefined) {\r\n\t\t\tself.queueables[name]=new obj();\r\n\t\t\tself.queueables[name].init(self);\r\n\t\t\tconsole.log('Booting Queueable ['+name+']');\r\n\t\t\treturn false;\r\n\t\t}\r\n\t\treturn true;\r\n\t}\r\n\r\n\t/**\r\n\t * Helper function to upcase first letter of string\r\n\t * @param string\r\n\t * @return {string}\r\n\t */\r\n\tcapitalizeFirstLetter(string) {\r\n\t\treturn string.charAt(0).toUpperCase() + string.slice(1);\r\n\t}\r\n\r\n\t/**\r\n\t * Loads templates from the template stack. Recursively calls self until stack is empty\r\n\t * @returns {void}\r\n\t */\r\n\ttemplateLoader() {\r\n\t\tlet self=this;\r\n\t\t/*\r\n\t\t *  Are there any templates to load?\r\n\t\t *\r\n\t\t *  If not then we dump the fragment into the dom\r\n\t\t */\r\n\t\tif (this.templates.length === 0) {\r\n\t\t\tdocument.head.appendChild(self.fragment);\r\n\t\t\t// Clean up the fragment\r\n\t\t\tself.fragment=document.createDocumentFragment();\r\n\t\t\t/*\r\n\t\t\t * Set our status and then process the init template\r\n\t\t\t */\r\n\t\t\tself.status=self.DEFINE.STATUS_LOADED;\r\n\t\t\t/*\r\n\t\t\t * Detach the init template loader from this stack chain\r\n\t\t\t *\r\n\t\t\t * We do this because a fail in a subsequent template will register as an error in the fetch catch method\r\n\t\t\t * which is misleading\r\n\t\t\t */\r\n\t\t\tsetTimeout(function(){ self.templateProcessor(\"#init\",false);},100);\r\n\r\n\t\t\tself.status=self.DEFINE.STATUS_RUNNING;\r\n\t\t\tconsole.info(self.DEFINE.CONSOLE_LINE);\r\n\t\t\tconsole.log('[Online]');\r\n\t\t\tconsole.log('queue.show(); # To debug the queue');\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\t/*\r\n\t\t * Pop the template off the stack\r\n\t\t */\r\n\t\tlet template = this.templates.pop();\r\n\r\n\t\tfetch(template, {\r\n\t\t\theaders: {\r\n\t\t\t\t'Content-Type': 'test/html'\r\n\t\t\t}\r\n\t\t})\r\n\t\t\t.then(response => self.handleFetchErrors(response))\r\n\t\t\t.then(response => response.text())\r\n\t\t\t.then(function (response) {\r\n\r\n\t\t\t\t/*\r\n\t\t\t\t * Get the template we were sent and add it to the fragment for insertion into the dom\r\n\t\t\t\t *\r\n\t\t\t\t * We wrap it in meta tag, this helps improve render speed but still stuck with an innerHTML\r\n\t\t\t\t * as we don't know the content\r\n\t\t\t\t *\r\n\t\t\t\t */\r\n\t\t\t\tlet text = response;\r\n\t\t\t\t/*\r\n\t\t\t\t * Remove any html comments as they will slow down processing later on\r\n\t\t\t\t */\r\n\t\t\t\ttext=text.replace(/<!--([\\s\\S]*?)-->/g,'');\r\n\r\n\t\t\t\tlet meta = document.createElement('meta');\r\n\t\t\t\tmeta.setAttribute(\"name\", \"generator\");\r\n\t\t\t\tmeta.setAttribute(\"content\", template);\r\n\t\t\t\tmeta.innerHTML=text;\r\n\t\t\t\tself.fragment.appendChild(meta);\r\n\r\n\t\t\t\t/*\r\n\t\t\t\t *  Call our self again to process any more templates\r\n\t\t\t\t */\r\n\t\t\t\tself.templateLoader();\r\n\t\t\t})\r\n\t\t\t.catch(function (error) {\r\n\t\t\t\tconsole.error('Error:', error);\r\n\t\t\t\tconsole.info(\"Warning this error is probably fatal as a template specified in templates.json has failed to load or wont process\");\r\n\t\t\t});\r\n\t};\r\n\r\n\t/**\r\n\t * Template processor\r\n\t * Takes a template, process it and places into the dom\r\n\t * @param templateId {string} - ID of the template\r\n\t * @param targetId {string|false} - Place in the dom the put the result. In the event of false we process without dom\r\n\t * @return {boolean|string} - success status\r\n\t */\r\n\ttemplateProcessor(templateId, targetId) {\r\n\t\tlet self=this;\r\n\t\tlet commands=[];\r\n\r\n\t\tlet templateDom = self.getElement(templateId);\r\n\t\tif(!templateDom) {\r\n\t\t\tself.reportError('No valid template','I have no valid template, check the templateId ['+templateId+']');\r\n\t\t\treturn false;\r\n\t\t}\r\n\t\tlet targetDom=undefined;\r\n\t\tlet templateHTML = templateDom.innerHTML;\r\n\t\t/*\r\n\t\t * Pass all out tags {{ }} First\r\n\t\t *\r\n\t\t * TODO we need to split this so only loop etc is done first, then pass to templateParse then parse\r\n\t\t * out {{eval}} when the command queues are gone to prevent executing too early\r\n\t\t */\r\n\t\tlet parsedTemplate=self.templateVars(templateHTML);\r\n\t\t/*\r\n\t\t * now pass to the templateParse to build our commands\r\n\t\t */\r\n\t\tparsedTemplate=self.templateParse(parsedTemplate,commands);\r\n\r\n\t\tif(targetId===\"return\")\r\n\t\t\treturn parsedTemplate;\r\n\r\n\r\n\t\tif(targetId!==false) {\r\n\t\t\ttargetDom=self.getElement(targetId);\r\n\t\t\tif(!targetDom) {\r\n\t\t\t\tself.reportError('No valid target','I have no valid target to render the template ['+templateId+'] to, check the targetId ['+targetId+']');\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t\tself.renderToDom(targetDom,parsedTemplate);\r\n\t\t\tself.commandsBind(commands);\r\n\t\t}\r\n\r\n\t\treturn true;\r\n\t}\r\n\r\n\t/**\r\n\t * Process the template looking for {{}} instances\r\n\t * @param template\r\n\t * @return {*}\r\n\t */\r\n\ttemplateVars(template) {\r\n\t\tlet match;\r\n\t\tlet self=this;\r\n\t\t/*\r\n\t\t * Look for {{#for}} loops and execute them\r\n\t\t */\r\n\t\tconst forRegex=/{{#([0-9]{0,1})for (.*?)}}([\\s\\S]*?){{\\/for}}/;\r\n\t\twhile (match = forRegex.exec(template)) {\r\n\t\t\tlet subTemplate='';\r\n\t\t\tmatch[1]=match[1]||0;\r\n\t\t\t/*\r\n\t\t\t * loop through making sub templates as we go\r\n\t\t\t *\r\n\t\t\t * NOTE: you will notice that all index methods use 0 at the end. This is to allow\r\n\t\t\t * for the future when we implement for loops in for loops.\r\n\t\t\t */\r\n\t\t\tfor(let i in eval(match[2])) {\r\n\t\t\t\t/*\r\n\t\t\t\t * Set a memory 'for0' containing the index. This is an object as in the future it\r\n\t\t\t\t * may be expanded to contain other info.\r\n\t\t\t\t */\r\n\t\t\t\tthis.setMemory(\"for\"+match[1],{\"index\":i},\"session\");\r\n\t\t\t\t/*\r\n\t\t\t\t * This is the quick way to reference in the index but will now work for templates that\r\n\t\t\t\t * include others\r\n\t\t\t\t */\r\n\t\t\t\tlet loopRegex=new RegExp(\"#loop\"+match[1],\"g\");\r\n\t\t\t\tlet incrementMatch=match[3].replace(loopRegex,i);\r\n\t\t\t\t/*\r\n\t\t\t\t * Process the template\r\n\t\t\t\t */\r\n\t\t\t\tsubTemplate+=self.templateVars(incrementMatch,i);\r\n\t\t\t}\r\n\t\t\ttemplate = template.replace(match[0], subTemplate);\r\n\t\t}\r\n\t\t/*\r\n\t \t * Process {{#if}}\r\n\t \t*/\r\n\t\tconst ifRegex=/{{#if (.*?)}}([\\s\\S]*?){{\\/if}}/;\r\n\t\twhile (match = ifRegex.exec(template)) {\r\n\t\t\tconst elseRegex=/{{#if .*?}}([\\s\\S]*?){{else}}([\\s\\S]*?){{\\/if}}/g;\r\n\t\t\tlet ifResult=match[2];\r\n\t\t\tlet elseResult='';\r\n\t\t\tlet elseMatch=elseRegex.exec(match[0]);\r\n\t\t\tif(elseMatch) {\r\n\t\t\t\tifResult=elseMatch[1];\r\n\t\t\t\telseResult=elseMatch[2];\r\n\t\t\t}\r\n\t\t\ttry {\r\n\t\t\t\tif (eval(match[1]))\r\n\t\t\t\t\ttemplate = template.replace(match[0], self.templateVars(ifResult));\r\n\t\t\t\telse\r\n\t\t\t\t\ttemplate = template.replace(match[0], self.templateVars(elseResult));\r\n\t\t\t} catch(e) {\r\n\t\t\t\tconsole.log('Failed to eval ['+match[1]+']');\r\n\t\t\t\ttemplate = template.replace(match[0], '');\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t/*\r\n\t\t * Look for any includes to directly inject templates\r\n\t\t */\r\n\t\tconst includeRegex=/{{#include (.*?)}}/;\r\n\t\twhile (match = includeRegex.exec(template)) {\r\n\t\t\ttemplate = template.replace(match[0], self.templateVars(self.getElement(match[1]).innerHTML));\r\n\t\t}\r\n\r\n\t\t/*\r\n\t\t * Process any other {{}} tags but not if they have {{!}} as those are done on command exec time\r\n\t\t */\r\n\t\tconst commandRegex=/{{([^!|~](.|\\n)*?)}}/;\r\n\t\twhile (match = commandRegex.exec(template)) {\r\n\t\t\tif(match[1][0]==='^')\r\n\t\t\t\ttemplate = template.replace('\"'+match[0]+'\"', self.varsParser(match[1].substring(1,match[1].length)));\r\n\t\t\telse\r\n\t\t\t\ttemplate = template.replace(match[0], self.varsParser(match[1]));\r\n\t\t}\r\n\t\treturn template;\r\n\t}\r\n\r\n\t/**\r\n\t * Process a json object and replace {{!}} tags\r\n\t * @param json\r\n\t * @return {any}\r\n\t */\r\n\tjsonVars(json) {\r\n\t\tlet self=this;\r\n\t\tjson=JSON.stringify(json);\r\n\t\tconst commandRegex=/{{(![\\^]{0,1})(.*?)}}/;\r\n\t\tlet match;\r\n\t\twhile (match = commandRegex.exec(json)) {\r\n\t\t\tif(match[1]==='!^')\r\n\t\t\t\tjson = json.replace('\"'+match[0]+'\"', self.varsParser(match[2]));\r\n\t\t\telse\r\n\t\t\t\tjson = json.replace(match[0], self.varsParser(match[2]));\r\n\t\t}\r\n\t\tlet jsonReturn={};\r\n\t\ttry {\r\n\t\t\tjsonReturn=JSON.parse(json);\r\n\t\t} catch(e) {\r\n\t\t\tself.reportError(\"Can not parse JSON [\"+json+\"]\",\"This error is probably fatal, check your templates\");\r\n\r\n\t\t}\r\n\t\treturn jsonReturn;\r\n\t}\r\n\t/**\r\n\t * parse a var string\r\n\t *\r\n\t * TODO This is massively insecure. If as user can input {{}} into a form and have it displayed\r\n\t * to other users they can take over. We either clean all input as you would with <script> etc tags or we\r\n\t * manually write a parser.\r\n\t *\r\n\t * @param parseString\r\n\t * @return {any}\r\n\t */\r\n\tvarsParser(parseString) {\r\n\t\tlet ret=undefined;\r\n\t\ttry {\r\n\t\t\tret=eval(parseString);\r\n\t\t} catch (e) {\r\n\t\t\tconsole.log('Cant resolve ['+parseString+']');\r\n\t\t}\r\n\t\treturn ret;\r\n\t}\r\n\r\n\t/**\r\n\t * Takes a template and runs any template commands contained in it to create a HTML template\r\n\t * ready to be put into the dom\r\n\t *\r\n\t * @param template {string}\r\n\t * @return {string}\r\n\t */\r\n\ttemplateParse(template,commands) {\r\n\t\tlet commandRegex=/[@\\-]([a-zA-Z0-9]*?\\.[a-zA-Z0-9]*?\\((.|\\n)*?(\\);))/;\r\n\t\tlet match=undefined;\r\n\t\tlet parentCommand;\r\n\t\tlet isParent;\r\n\t\tlet self=this;\r\n\t\t/*\r\n\t\t *  Locate all the commands in the template and generate an array of command objects that\r\n\t\t *  are linked by a reference into the template\r\n\t\t */\r\n\t\twhile (match = commandRegex.exec(template)) {\r\n\t\t\tisParent=match[0][0]==='@';\r\n\t\t\t/*\r\n\t\t\t * Generate this command object from the extracted string\r\n\t\t\t */\r\n\t\t\tlet command=self.commandParse(match[1],isParent);\r\n\r\n\t\t\t/*\r\n\t\t\t *  In the case of an instant or sub run we don't need to leave anything in the DOM so nuke\r\n\t\t\t */\r\n\t\t\tif(command.options.queueRun===self.DEFINE.COMMAND_INSTANT||command.options.queueRun===self.DEFINE.COMMAND_SUB) {\r\n\t\t\t\ttemplate = template.replace(match[0], \"\");\r\n\t\t\t} else {\r\n\t\t\t\ttemplate = template.replace(match[0], \"data-queueable=\\\"CMD\" + command.ucid + \"\\\"\");\r\n\t\t\t}\r\n\t\t\t/*\r\n\t\t\t *  Is this a @parent or a -child?\r\n\t\t\t */\r\n\t\t\tif(isParent) {\r\n\t\t\t\t// Set the parent point to current position\r\n\t\t\t\tparentCommand=commands.length;\r\n\r\n\t\t\t\tcommands.push(command);\r\n\t\t\t} else {\r\n\t\t\t\t// If the parent has just been created it won't have child structure\r\n\t\t\t\tif(commands[parentCommand].commands===undefined) {\r\n\t\t\t\t\tcommands[parentCommand].commands=[];\r\n\t\t\t\t}\r\n\t\t\t\t// Put the command in the parents\r\n\t\t\t\tcommands[parentCommand].commands.push(command);\r\n\t\t\t}\r\n\t\t}\r\n\t\t// Add the instants to the active queue\r\n\t\tself.commandsQueue(commands);\r\n\t\treturn template;\r\n\t}\r\n\r\n\t/**\r\n\t * Bind the events to the dom based on the command Object\r\n\t * @param commandObj\r\n\t */\r\n\tcommandsBind(commandObj) {\r\n\t\tlet self=this;\r\n\t\tfor(let command in commandObj) {\r\n\t\t\t/*\r\n\t\t\t * Bind queue elements will not me marked to run instantly so we pick those\r\n\t\t\t */\r\n\t\t\tif(commandObj[command].options.queueRun!==self.DEFINE.COMMAND_INSTANT) {\r\n\t\t\t\t/*\r\n\t\t\t\t * Find its dom entry using the selector we added\r\n\t\t\t\t */\r\n\t\t\t\tlet element=self.getElement(\"[data-queueable=CMD\"+commandObj[command].ucid+\"]\");\r\n\r\n\t\t\t\t/*\r\n\t\t\t\t * Add the event. We flip it over to an instant event now because we want\r\n\t\t\t\t * it triggered.\r\n\t\t\t\t *\r\n\t\t\t\t * The user may have specified an event and if so it will be a comma separated list\r\n\t\t\t\t */\r\n\t\t\t\tlet event=commandObj[command].options.queueEvent||\"click\";\r\n\t\t\t\tlet events=event.split(\",\");\r\n\t\t\t\tfor(let e in events) {\r\n\t\t\t\t\telement.addEventListener(events[e], function () {\r\n\t\t\t\t\t\tcommandObj[command].options.queueRun = self.DEFINE.COMMAND_INSTANT;\r\n\t\t\t\t\t\tself.commandsQueue.apply(self, [[commandObj[command]]]);\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Take the commands array with command objects in it and add them to the queue *if* they are\r\n\t * marked as instant. IE ready to execute\r\n\t *\r\n\t * @param commandObj\r\n\t */\r\n\tcommandsQueue(commandObj) {\r\n\t\tlet self=this;\r\n\t\tfor(let command in commandObj) {\r\n\t\t\t/*\r\n\t\t\t * DEFINE.COMMAND_INSTANT, basically a queue item we need to get running\r\n\t\t\t */\r\n\t\t\tif(commandObj[command].options.queueRun===self.DEFINE.COMMAND_INSTANT) {\r\n\t\t\t\tself.queue.push(self.deepCopy(commandObj[command]));\r\n\t\t\t}\r\n\t\t\t/*\r\n\t\t\t * Is the a prepare queue that will be triggered at some later stage\r\n\t\t\t */\r\n\t\t\tif(commandObj[command].options.queuePrepare!== undefined) {\r\n\t\t\t\tself.prepare[commandObj[command].options.queuePrepare]=self.deepCopy(commandObj[command]);\r\n\t\t\t\tconsole.log('Added Prepared Queue ['+commandObj[command].options.queuePrepare+']');\r\n\t\t\t}\r\n\t\t}\r\n\t\t/*\r\n\t\t *  Trigger a queue process\r\n\t\t */\r\n\t\tself.queueProcess();\r\n\t}\r\n\r\n\t/**\r\n\t * Execute a queue that is loaded into prepare\r\n\t *\r\n\t * @param prepareName {string} Name of the prepared queue\r\n\t * @param json {object}\r\n\t */\r\n\texecute(prepareName,json) {\r\n\t\tlet self=this;\r\n\t\tif(self.prepare[prepareName]!==undefined) {\r\n\t\t\t/*\r\n\t\t\t * Take a copy of the prepared command as we need to alter it\r\n\t\t\t * and possibly pass new params then add it to the queue\r\n\t\t\t */\r\n\t\t\tlet dereferenceCommand=self.deepCopy(self.prepare[prepareName]);\r\n\t\t\tdereferenceCommand.options.queueRun=self.DEFINE.COMMAND_INSTANT;\r\n\t\t\tif(json!==undefined)\r\n\t\t\t\tdereferenceCommand.json=Object.assign(dereferenceCommand.json,json);\r\n\t\t\tself.commandsQueue.apply(self,[[dereferenceCommand]]);\r\n\t\t\treturn true;\r\n\t\t} else {\r\n\t\t\tself.reportError(\"Can not execute prepare [\"+prepareName+\"]\",\"The prepared queue you requested does not exist\");\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Force a queue processing\r\n\t *\r\n\t * This launches the actual objects using a timeout\r\n\t *\r\n\t * @param sync {boolean} - Send true to force sync mode (Really only for test mode)\r\n\t */\r\n\tqueueProcess(sync) {\r\n\t\tlet self=this;\r\n\t\t/*\r\n\t\t *  TODO Only implementing basic queue here for testing. Concepts of active componets etc need importing\r\n\t\t *  for moho\r\n\t\t */\r\n\t\tfor(let item in self.queue) {\r\n\t\t\t/*\r\n\t\t\t *  Look for items that are QUEUE_ADDED as they need processing\r\n\t\t\t *\r\n\t\t\t */\r\n\t\t\tif(self.queue[item].state===self.DEFINE.QUEUE_ADDED) {\r\n\t\t\t\t/*\r\n\t\t\t\t * Does this queueable exist?\r\n\t\t\t\t */\r\n\t\t\t\tif(self.queueables[self.queue[item].queueable]) {\r\n\t\t\t\t\t/*\r\n\t\t\t\t\t * Is it online? If not we fail silently as it may come online later\r\n\t\t\t\t\t */\r\n\t\t\t\t\tif (self.queueables[self.queue[item].queueable].ready) {\r\n\t\t\t\t\t\t/*\r\n\t\t\t\t\t\t * Update our state to be running\r\n\t\t\t\t\t\t */\r\n\t\t\t\t\t\tself.queue[item].state = self.DEFINE.QUEUE_RUNNING;\r\n\t\t\t\t\t\t/*\r\n\t\t\t\t\t\t * Assign a pid\r\n\t\t\t\t\t\t */\r\n\t\t\t\t\t\tif (self.queue[item].pid === undefined) {\r\n\t\t\t\t\t\t\tself.queue[item].pid = self.pid;\r\n\t\t\t\t\t\t\tself.pid++;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\t/*\r\n\t\t\t\t\t\t * Check if any specific timing is needed\r\n\t\t\t\t\t\t */\r\n\t\t\t\t\t\tself.queue[item].options.queueTimer = self.queue[item].options.queueTimer || self.defaultTimer;\r\n\r\n\t\t\t\t\t\t/*\r\n\t\t\t\t\t\t *  Launch the function as a time out (so we get control back)\r\n\t\t\t\t\t\t */\r\n\t\t\t\t\t\tif (sync) {\r\n\t\t\t\t\t\t\tself.queueables[self.queue[item].queueable].start.apply(self.queueables[self.queue[item].queueable], [self.queue[item].pid, self.queue[item].command, self.jsonVars(self.queue[item].json), self]);\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tsetTimeout(function () {\r\n\t\t\t\t\t\t\t\tself.queueables[self.queue[item].queueable].start.apply(self.queueables[self.queue[item].queueable], [self.queue[item].pid, self.queue[item].command, self.jsonVars(self.queue[item].json), self]);\r\n\t\t\t\t\t\t\t}, self.queue[item].options.queueTimer);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t} else {\r\n\t\t\t\t\tself.reportError(\"Can not find queueable [\"+self.queue[item].queueable+\"]\",\"Have you added it to the build?\");\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Find a queue item by searching for its PID\r\n\t * @param pid\r\n\t * @return {*}\r\n\t */\r\n\tfindQueueByPid(pid) {\r\n\t\tlet self=this;\r\n\t\tfor(let item in self.queue) {\r\n\t\t\tif(self.queue[item].pid===pid) {\r\n\t\t\t\treturn self.queue[item];\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\r\n\t/**\r\n\t * Called by queueables to add something to our memory stack\r\n\t * @param name\r\n\t * @param value\r\n\t * @param pid\r\n\t */\r\n\tmemory(pid,value) {\r\n\t\tlet self=this;\r\n\t\tlet command=this.findQueueByPid(pid);\r\n\t\tif(command) {\r\n\t\t\tlet origin = command.options.memoryName || command.queueable + '.' + command.command;\r\n\t\t\tlet mode = self.DEFINE.MEMORY_GARBAGE;\r\n\t\t\tif (command.options.memoryMode)\r\n\t\t\t\tmode = command.options.memoryMode;\r\n\t\t\tlet memoryDetails = {\r\n\t\t\t\tpid: pid,\r\n\t\t\t\tmode: mode,\r\n\t\t\t\torigin: origin,\r\n\t\t\t\tvalue: value\r\n\t\t\t};\r\n\t\t\twindow.memory[origin] = memoryDetails;\r\n\t\t\treturn true;\r\n\t\t} else {\r\n\t\t\tthis.reportError(\"Could not set memory\",\"The memory set for pid [\"+pid+\"] could not be found\");\r\n\t\t\treturn false;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Set memory that is not associated with a running queueable (IE from the templates)\r\n\t * @param name\r\n\t * @param value\r\n\t * @param mode\r\n\t * @return {boolean}\r\n\t */\r\n\tsetMemory(name,value,mode) {\r\n\t\tlet self=this;\r\n\t\tmode=mode||self.DEFINE.MEMORY_GARBAGE;\r\n\t\tlet memoryDetails = {\r\n\t\t\tpid: -1,\r\n\t\t\tmode: mode,\r\n\t\t\torigin: 'User',\r\n\t\t\tvalue: value\r\n\t\t};\r\n\t\twindow.memory[name] = memoryDetails;\r\n\t\tself._updateMemoryPerms();\r\n\r\n\t\treturn true;\r\n\t}\r\n\r\n\t/**\r\n\t * Flush any permanent memory to cookies\r\n\t * @private\r\n\t */\r\n\t_updateMemoryPerms() {\r\n\t\tlet self=this;\r\n\t\tlet perms=[];\r\n\t\tlet date = new Date();\r\n\t\tdate.setTime(date.getTime() + (7 * 24 * 60 * 60 * 1000));\r\n\t\tlet expires = \"; expires=\" + date.toUTCString();\r\n\t\tfor(let i in window.memory) {\r\n\t\t\tif(window.memory[i].mode===self.DEFINE.MEMORY_PERMANENT) {\r\n\t\t\t\tself.setCookie('OT_'+i,window.btoa(JSON.stringify(window.memory[i])));\r\n\t\t\t\tperms.push(i);\r\n\t\t\t}\r\n\t\t}\r\n\t\tself.setCookie('OT_INDEX',JSON.stringify(perms));\r\n\t}\r\n\r\n\t/**\r\n\t * Load perm memory items from cookies\r\n\t * @private\r\n\t */\r\n\t_loadMemoryPerms() {\r\n\t\tlet self=this;\r\n\t\tlet index=self.getCookie(\"OT_INDEX\");\r\n\t\tif(index!==null) {\r\n\t\t\tindex=JSON.parse(index);\r\n\t\t\tfor(let i in index) {\r\n\t\t\t\tlet perm=JSON.parse(window.atob(self.getCookie(\"OT_\"+index[i])));\r\n\t\t\t\twindow.memory[index[i]]=perm;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieve a cookie by name\r\n\t * @param name - Cookie name\r\n\t * @returns {*}\r\n\t */\r\n\tgetCookie(name) {\r\n\t\tlet nameEQ = name + \"=\";\r\n\t\tlet ca = document.cookie.split(';');\r\n\t\tfor (let i = 0; i < ca.length; i++) {\r\n\t\t\tlet c = ca[i];\r\n\t\t\twhile (c.charAt(0) == ' ') c = c.substring(1, c.length);\r\n\t\t\tif (c.indexOf(nameEQ) == 0) return decodeURIComponent(c.substring(nameEQ.length, c.length));\r\n\t\t}\r\n\t\treturn null;\r\n\t}\r\n\r\n\t/**\r\n\t * set a cookie by name and value\r\n\t * @param name - Cookie name\r\n\t * @param value - Value of cookie\r\n\t * @returns {*}\r\n\t */\r\n\tsetCookie(name,value) {\r\n\t\tlet date = new Date();\r\n\t\tdate.setTime(date.getTime() + (7 * 24 * 60 * 60 * 1000));\r\n\t\tlet expires = \"; expires=\" + date.toUTCString();\r\n\t\tdocument.cookie = name + \"=\" + value + expires + \"; path=/\";\r\n\t}\r\n\r\n\t/**\r\n\t * Called at the end of a queue run to flush any garbage\r\n\t * @param pid\r\n\t */\r\n\tcleanMemory(pid) {\r\n\t\tlet self=this;\r\n\t\tfor(let i in window.memory) {\r\n\t\t\tif(window.memory[i].pid===pid&&window.memory[i].mode===self.DEFINE.MEMORY_GARBAGE) {\r\n\t\t\t\twindow.memory[i]={};\r\n\t\t\t\tdelete window.memory[i];\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Is there any work to do in the queue?\r\n\t */\r\n\tisWork() {\r\n\t\tlet self=this;\r\n\t\tlet count=0;\r\n\t\tfor(let item in self.queue) {\r\n\t\t\tif(self.queue[item].state!==self.DEFINE.QUEUE_FINISHED&&self.queue[item].state!==self.DEFINE.QUEUE_ERROR)\r\n\t\t\t\tcount++;\r\n\t\t}\r\n\t\treturn count;\r\n\t}\r\n\r\n\t/**\r\n\t *  Called to flag a queue item as finished\r\n\t *\r\n\t *  Normally hooked down from queueable this is a queue item saying I have finished in mode (see define.js)\r\n\t *\r\n\t * @param pid\r\n\t * @param mode\r\n\t */\r\n\tfinished(pid,mode,error) {\r\n\t\tlet self=this;\r\n\t\tfor(let item in self.queue) {\r\n\t\t\t/*\r\n\t\t\t *  Find the queue item we need to finish\r\n\t\t\t */\r\n\t\t\tif(self.queue[item].pid===pid) {\r\n\t\t\t\tself.queue[item].error=error;\r\n\t\t\t\tif (self.queue[item].state === self.DEFINE.QUEUE_RUNNING) {\r\n\t\t\t\t\t/*\r\n\t\t\t\t\t * Did the command return an error? If so we will stop this queue from further execution\r\n\t\t\t\t\t */\r\n\t\t\t\t\tif(mode==self.DEFINE.FIN_ERROR) {\r\n\t\t\t\t\t\tself.queue[item].state=self.DEFINE.QUEUE_ERROR;\r\n\t\t\t\t\t\tself.reportError(error,'The queueable ['+pid+'] has errored, queue put on hold');\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t\t}\r\n\t\t\t\t\t/*\r\n\t\t\t\t\t * Was there a warning?. This isn't serious so we just mention it to the console\r\n\t\t\t\t\t */\r\n\t\t\t\t\tif(mode==self.DEFINE.FIN_WARNING) {\r\n\t\t\t\t\t\tconsole.log('Warning: '+error);\r\n\t\t\t\t\t}\r\n\t\t\t\t\t\t/*\r\n\t\t\t\t\t\t *\r\n\t\t\t\t\t\t * Check if this queue has commands left\r\n\t\t\t\t\t\t */\r\n\t\t\t\t\tif(self.queue[item].commands!==undefined&&self.queue[item].commands.length>0) {\r\n\t\t\t\t\t\t/*\r\n\t\t\t\t\t\t * Move the next item in the queue down\r\n\t\t\t\t\t\t */\r\n\t\t\t\t\t\tself.queue[item].command=self.queue[item].commands[0].command;\r\n\t\t\t\t\t\tself.queue[item].queueable=self.queue[item].commands[0].queueable;\r\n\t\t\t\t\t\tself.queue[item].json=self.queue[item].commands[0].json;\r\n\t\t\t\t\t\tself.queue[item].options=self.queue[item].commands[0].options;\r\n\t\t\t\t\t\tself.queue[item].commands.shift();\r\n\t\t\t\t\t\t/*\r\n\t\t\t\t\t\t *  Update the pid\r\n\t\t\t\t\t\t *  TODO remove this as queues need to maintain their Pid for memory\r\n\t\t\t\t\t\t */\r\n\t\t\t\t\t\t//self.queue[item].pid=self.pid;\r\n\t\t\t\t\t\t//self.pid++;\r\n\t\t\t\t\t\tself.queue[item].state = self.DEFINE.QUEUE_ADDED;\r\n\t\t\t\t\t\t/*\r\n\t\t\t\t\t\t * Start the queue processor as we just posted a new command\r\n\t\t\t\t\t\t */\r\n\t\t\t\t\t\tself.queueProcess();\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tself.queue[item].state = self.DEFINE.QUEUE_FINISHED;\r\n\t\t\t\t\t\tself.cleanMemory(self.queue[item].pid);\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tself.reportError('Cant stop an already stopped process ['+pid+']','Queue is corrupted');\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * This will take a command string in the format object.command({},{}); and split it down\r\n\t * into it parts as an object\r\n\t *\r\n\t * TODO no concept of the context of the command IE was it from inside a div that need binding?\r\n\t * @param command {string}\r\n\t * @return {object}\r\n\t */\r\n\tcommandParse(command,isParent) {\r\n\t\tlet self=this;\r\n\t\tlet commandObject={\"ucid\":++self.ucid};\r\n\t\t// Find the actual command\r\n\t\tlet commandArray=command.match(/(.*?)\\(/)[1].split('.');\r\n\t\tcommandObject.queueable=commandArray[0];\r\n\t\tcommandObject.command=commandArray[1];\r\n\t\t// Strip as we go to make follow up regex easier\r\n\t\tcommand=command.replace(/.*?\\(/,'[');\r\n\t\t// Find first json arg\r\n\r\n\t\tcommand=command.replace(/\\);$/m,']');\r\n\t\tlet jsonArray=JSON.parse(command);\r\n\t\tif(jsonArray[0]) {\r\n\t\t\tcommandObject.json = jsonArray[0];\r\n\t\t} else {\r\n\t\t\tcommandObject.json={};\r\n\t\t}\r\n\t\t\r\n\t\tif(jsonArray[1]) {\r\n\t\t\tcommandObject.options = jsonArray[1];\r\n\t\t} else {\r\n\t\t\tcommandObject.options={};\r\n\t\t}\r\n\t\t/*\r\n\t\t * Set our default options if they haven't been set\r\n\t\t *\r\n\t\t * We must always have a queueRun object if its not set (normally by instant) then its either an event in\r\n\t\t * which case it must be a parent or failing then its a sub\r\n\t\t *\r\n \t\t */\r\n\t\tcommandObject.options.queueRun=commandObject.options.queueRun||(isParent? self.DEFINE.COMMAND_EVENT:self.DEFINE.COMMAND_SUB);\r\n\t\tcommandObject.state=self.DEFINE.QUEUE_ADDED;\r\n\t\treturn commandObject;\r\n\t}\r\n\r\n\t/**\r\n\t * Render some text/html to the dom\r\n\t * @param domObject {object} - The object in the dom to write to\r\n\t * @param text {string} - The text/HTML to write\r\n\t * @param mode {number} - Mode to use while writing see define.js\r\n\t * @return {boolean}\r\n\t */\r\n\trenderToDom(domObject,text,mode) {\r\n\t\tlet self=this;\r\n\t\tmode=mode||self.DEFINE.RENDER_INSERT;\r\n\t\tswitch(mode) {\r\n\t\t\tcase self.DEFINE.RENDER_INSERT:\r\n\t\t\t\tdomObject.innerHTML=text;\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\t\treturn true;\r\n\t}\r\n\r\n\t/**\r\n\t * Finds elements in the dom of an iframe (or current document) using the query selector\r\n\t * @param iframeTarget Iframe or false\r\n\t * @param elementTarget query\r\n\t * @param errorTrap {boolean} Trap any errors?\r\n\t * @return {object|false}\r\n\t */\r\n\tgetIframeElements(iframeTarget,elementTarget,errorTrap=true) {\r\n\t\tlet self=this;\r\n\t\tlet iframe = document.getElementById(iframeTarget);\r\n\t\tif(!iframe)\r\n\t\t\tiframe=document;\r\n\t\telse\r\n\t\t\tiframe=iframe.contentDocument || iframe.contentWindow.document;\r\n\t\tlet element=iframe.querySelectorAll(elementTarget);\r\n\t\t/*\r\n\t\t * IE11 BUG, check for non arrays and attempt to convert\r\n\t\t */\r\n\t\tif(!Array.isArray(element)) {\r\n\t\t\telement = Array.from(element);\r\n\t\t}\r\n\t\tif(element!==null)\r\n\t\t\treturn element;\r\n\t\tif(errorTrap)\r\n\t\t\tself.reportError('Dom Element find failed for ['+elementTarget+'] iframe ['+iframeTarget+']','Follow up calls that rely on this will fail');\r\n\t\treturn false;\r\n\t}\r\n\r\n\t/**\r\n\t * Finds an element in the dom using the jquery formant IE #id .class tag (will only ever return one)\r\n\t * @param elementTarget\r\n\t * @param errorTrap {boolean} Trap any errors?\r\n\t * @return {object|false}\r\n\t */\r\n\tgetElement(elementTarget,errorTrap=true) {\r\n\t\tlet self=this;\r\n\t\tlet element=document.querySelector(elementTarget);\r\n\t\tif(element!==null)\r\n\t\t\treturn element;\r\n\t\tif(errorTrap)\r\n\t\t\tself.reportError('Dom Element find failed for ['+elementTarget+']','Follow up calls that rely on this will fail');\r\n\t\treturn false;\r\n\t}\r\n\r\n\t/**\r\n\t * Finds an element(s) in the dom using the jquery formant IE #id .class tag (can return one or more)\r\n\t * @param elementTarget\r\n\t * @return {object|false}\r\n\t */\r\n\tgetElements(elementTarget) {\r\n\t\tlet self=this;\r\n\t\tlet element=document.querySelectorAll(elementTarget);\r\n\t\t/*\r\n\t\t * IE11 BUG, check for non arrays and attempt to convert\r\n\t\t */\r\n\t\tif(!Array.isArray(element)) {\r\n\t\t\t element = Array.from(element);\r\n\t\t}\r\n\t\tif(element!==null)\r\n\t\t\treturn element;\r\n\t\tself.reportError('Dom Element(s) find failed for ['+elementTarget+']','Follow up calls that rely on this will fail');\r\n\t\treturn false;\r\n\t}\r\n\r\n\r\n\t/**\r\n\t *  Show current queue status in the console DEBUG function\r\n\t */\r\n\tshow() {\r\n\t\tlet self=this;\r\n\t\tfor(let i in self.queue) {\r\n\t\t\tlet indent=0;\r\n\t\t\tself.prettyCommandObject(self.queue[i],indent);\r\n\t\t\tfor(let j in self.queue[i].commands) {\r\n\t\t\t\tindent++;\r\n\t\t\t\tself.prettyCommandObject(self.queue[i].commands[j],indent);\r\n\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Make a pretty version of the currrent commandObject and dump it to the console\r\n\t * @param commandObject\r\n\t * @param indent\r\n\t */\r\n\tprettyCommandObject(commandObject,indent) {\r\n\t\tlet self=this;\r\n\t\tlet string='';\r\n\t\tfor(var i=0;i<indent;i++) {\r\n\t\t\tstring+=' ';\r\n\t\t}\r\n\t\tlet color=self.DEFINE.CONSOLE_COL_GREEN;\r\n\t\tswitch(commandObject.state) {\r\n\t\t\tcase self.DEFINE.QUEUE_FINISHED:\r\n\t\t\t\tcolor=self.DEFINE.CONSOLE_COL_AMBER;\r\n\t\t\t\tbreak;\r\n\t\t\tcase self.DEFINE.QUEUE_ERROR:\r\n\t\t\t\tcolor=self.DEFINE.CONSOLE_COL_RED;\r\n\t\t\t\tbreak;\r\n\r\n\t\t}\r\n\t\tstring+=commandObject.queueable+'.'+commandObject.command+'('+JSON.stringify(commandObject.json)+','+JSON.stringify(commandObject.options)+');'\r\n\t\tconsole.log('%c '+string,color);\r\n\t\tif(commandObject.error)\r\n\t\t\tconsole.log('%c  Stopped: '+commandObject.error,self.DEFINE.CONSOLE_COL_AMBER);\r\n\t}\r\n\r\n\t/**\r\n\t * Report an error to the console, adds various internal stats\r\n\t * @param error\r\n\t * @param message\r\n\t */\r\n\treportError(error,message) {\r\n\t\tconsole.info(this.DEFINE.CONSOLE_LINE);\r\n\t\tconsole.error('Error:', error);\r\n\t\tconsole.info(message);\r\n\t}\r\n\r\n\t/**\r\n\t * Deep copy and object IE remove references\r\n\t * @param inputObject\r\n\t * @return {any}\r\n\t */\r\n\tdeepCopy(inputObject) {\r\n\t\treturn JSON.parse(JSON.stringify(inputObject));\r\n\t}\r\n\r\n\t/**\r\n\t * Adds classes for browser type to body for use in CSS\r\n\t */\r\n\tbrowserClasses() {\r\n\t\tlet self = this;\r\n\t\tlet bodyElement = self.getElement(\"body\");\r\n\t\tif (!!window.MSInputMethodContext && !!document.documentMode)\r\n\t\t\tbodyElement.classList.add(\"ie11\");\r\n\t\telse\r\n\t\t\tbodyElement.classList.add(\"notie11\");\r\n\t\tif (navigator.vendor.match(/apple/i))\r\n\t\t\tbodyElement.classList.add(\"safari\");\r\n\t\tif (navigator.vendor.match(/google/i))\r\n\t\t\tbodyElement.classList.add(\"chrome\");\r\n\t\tif (navigator.userAgent.indexOf(\"Edge\") > -1)\r\n\t\t\tbodyElement.classList.add(\"edge\");\r\n\t\tif (navigator.userAgent.toLowerCase().indexOf('firefox') > -1)\r\n\t\t\tbodyElement.classList.add(\"firefox\");\r\n\t}\r\n\r\n\t/**\r\n\t * Get any params from the url in json format\r\n\t */\r\n\turlToJson() {\r\n\t\tlet url = location.search;\r\n\t\tlet query = url.substr(1);\r\n\t\tlet result = {};\r\n\t\tquery.split(\"&\").forEach(function(part) {\r\n\t\t\tlet item = part.split(\"=\");\r\n\t\t\tresult[item[0]] = decodeURIComponent(item[1]);\r\n\t\t});\r\n\t\treturn result;\r\n\t}\r\n\r\n}\r\n\r\nexport default Queue;",
    "static": true,
    "longname": "C:/Users/xrout/Dropbox/machine/Work/webstorm/ourthings/src/ourthings/Queue.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 78,
    "kind": "class",
    "name": "Queue",
    "memberof": "ourthings/Queue.js",
    "static": true,
    "longname": "ourthings/Queue.js~Queue",
    "access": "public",
    "export": true,
    "importPath": "@nautoguide/ourthings/ourthings/Queue.js",
    "importStyle": "Queue",
    "description": "",
    "examples": [
      "let queue = new Queue();"
    ],
    "lineNumber": 14,
    "unknown": [
      {
        "tagName": "@classdesc",
        "tagValue": "\nThe main queue class"
      },
      {
        "tagName": "@author",
        "tagValue": "Richard Reynolds richard@nautoguide.com"
      }
    ],
    "interface": false
  },
  {
    "__docId__": 79,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "ourthings/Queue.js~Queue",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "ourthings/Queue.js~Queue#constructor",
    "access": "public",
    "description": "Class constructor",
    "lineNumber": 19
  },
  {
    "__docId__": 80,
    "kind": "method",
    "name": "handleFetchErrors",
    "memberof": "ourthings/Queue.js~Queue",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "ourthings/Queue.js~Queue#handleFetchErrors",
    "access": "public",
    "description": "Error Handler for fetch calls",
    "lineNumber": 154,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Object}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "response",
        "description": "{object} - Fetch response object"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Object"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 81,
    "kind": "method",
    "name": "checkQueueable",
    "memberof": "ourthings/Queue.js~Queue",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "ourthings/Queue.js~Queue#checkQueueable",
    "access": "public",
    "description": null,
    "lineNumber": 162,
    "undocument": true,
    "params": [
      {
        "name": "name",
        "types": [
          "*"
        ]
      },
      {
        "name": "obj",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "boolean"
      ]
    }
  },
  {
    "__docId__": 82,
    "kind": "method",
    "name": "capitalizeFirstLetter",
    "memberof": "ourthings/Queue.js~Queue",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "ourthings/Queue.js~Queue#capitalizeFirstLetter",
    "access": "public",
    "description": "Helper function to upcase first letter of string",
    "lineNumber": 178,
    "params": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "string",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 83,
    "kind": "method",
    "name": "templateLoader",
    "memberof": "ourthings/Queue.js~Queue",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "ourthings/Queue.js~Queue#templateLoader",
    "access": "public",
    "description": "Loads templates from the template stack. Recursively calls self until stack is empty",
    "lineNumber": 186,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{void}"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "void"
      ],
      "spread": false,
      "description": ""
    },
    "params": []
  },
  {
    "__docId__": 84,
    "kind": "method",
    "name": "templateProcessor",
    "memberof": "ourthings/Queue.js~Queue",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "ourthings/Queue.js~Queue#templateProcessor",
    "access": "public",
    "description": "Template processor\nTakes a template, process it and places into the dom",
    "lineNumber": 267,
    "params": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "templateId",
        "description": "{string} - ID of the template"
      },
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "targetId",
        "description": "{string|false} - Place in the dom the put the result. In the event of false we process without dom"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "boolean",
        "string"
      ],
      "spread": false,
      "description": "success status"
    }
  },
  {
    "__docId__": 85,
    "kind": "method",
    "name": "templateVars",
    "memberof": "ourthings/Queue.js~Queue",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "ourthings/Queue.js~Queue#templateVars",
    "access": "public",
    "description": "Process the template looking for {{}} instances",
    "lineNumber": 312,
    "params": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "template",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "*"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 86,
    "kind": "method",
    "name": "jsonVars",
    "memberof": "ourthings/Queue.js~Queue",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "ourthings/Queue.js~Queue#jsonVars",
    "access": "public",
    "description": "Process a json object and replace {{!}} tags",
    "lineNumber": 397,
    "params": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "json",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "any"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 87,
    "kind": "method",
    "name": "varsParser",
    "memberof": "ourthings/Queue.js~Queue",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "ourthings/Queue.js~Queue#varsParser",
    "access": "public",
    "description": "parse a var string\n\nTODO This is massively insecure. If as user can input {{}} into a form and have it displayed\nto other users they can take over. We either clean all input as you would with <script> etc tags or we\nmanually write a parser.",
    "lineNumber": 427,
    "params": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "parseString",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "any"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 88,
    "kind": "method",
    "name": "templateParse",
    "memberof": "ourthings/Queue.js~Queue",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "ourthings/Queue.js~Queue#templateParse",
    "access": "public",
    "description": "Takes a template and runs any template commands contained in it to create a HTML template\nready to be put into the dom",
    "lineNumber": 444,
    "params": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "template",
        "description": "{string}"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 89,
    "kind": "method",
    "name": "commandsBind",
    "memberof": "ourthings/Queue.js~Queue",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "ourthings/Queue.js~Queue#commandsBind",
    "access": "public",
    "description": "Bind the events to the dom based on the command Object",
    "lineNumber": 495,
    "params": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "commandObj",
        "description": ""
      }
    ],
    "return": null
  },
  {
    "__docId__": 90,
    "kind": "method",
    "name": "commandsQueue",
    "memberof": "ourthings/Queue.js~Queue",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "ourthings/Queue.js~Queue#commandsQueue",
    "access": "public",
    "description": "Take the commands array with command objects in it and add them to the queue *if* they are\nmarked as instant. IE ready to execute",
    "lineNumber": 532,
    "params": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "commandObj",
        "description": ""
      }
    ],
    "return": null
  },
  {
    "__docId__": 91,
    "kind": "method",
    "name": "execute",
    "memberof": "ourthings/Queue.js~Queue",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "ourthings/Queue.js~Queue#execute",
    "access": "public",
    "description": "Execute a queue that is loaded into prepare",
    "lineNumber": 561,
    "params": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "prepareName",
        "description": "{string} Name of the prepared queue"
      },
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "json",
        "description": "{object}"
      }
    ],
    "return": {
      "types": [
        "boolean"
      ]
    }
  },
  {
    "__docId__": 92,
    "kind": "method",
    "name": "queueProcess",
    "memberof": "ourthings/Queue.js~Queue",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "ourthings/Queue.js~Queue#queueProcess",
    "access": "public",
    "description": "Force a queue processing\n\nThis launches the actual objects using a timeout",
    "lineNumber": 588,
    "params": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "sync",
        "description": "{boolean} - Send true to force sync mode (Really only for test mode)"
      }
    ],
    "return": null
  },
  {
    "__docId__": 93,
    "kind": "method",
    "name": "findQueueByPid",
    "memberof": "ourthings/Queue.js~Queue",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "ourthings/Queue.js~Queue#findQueueByPid",
    "access": "public",
    "description": "Find a queue item by searching for its PID",
    "lineNumber": 647,
    "params": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "pid",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "*"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 94,
    "kind": "method",
    "name": "memory",
    "memberof": "ourthings/Queue.js~Queue",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "ourthings/Queue.js~Queue#memory",
    "access": "public",
    "description": "Called by queueables to add something to our memory stack",
    "lineNumber": 663,
    "params": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "name",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "value",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "pid",
        "description": ""
      }
    ],
    "return": {
      "types": [
        "boolean"
      ]
    }
  },
  {
    "__docId__": 95,
    "kind": "method",
    "name": "setMemory",
    "memberof": "ourthings/Queue.js~Queue",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "ourthings/Queue.js~Queue#setMemory",
    "access": "public",
    "description": "Set memory that is not associated with a running queueable (IE from the templates)",
    "lineNumber": 692,
    "params": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "name",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "value",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "mode",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 96,
    "kind": "method",
    "name": "_updateMemoryPerms",
    "memberof": "ourthings/Queue.js~Queue",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "ourthings/Queue.js~Queue#_updateMemoryPerms",
    "access": "private",
    "description": "Flush any permanent memory to cookies",
    "lineNumber": 711,
    "params": [],
    "return": null
  },
  {
    "__docId__": 97,
    "kind": "method",
    "name": "_loadMemoryPerms",
    "memberof": "ourthings/Queue.js~Queue",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "ourthings/Queue.js~Queue#_loadMemoryPerms",
    "access": "private",
    "description": "Load perm memory items from cookies",
    "lineNumber": 730,
    "params": [],
    "return": null
  },
  {
    "__docId__": 98,
    "kind": "method",
    "name": "getCookie",
    "memberof": "ourthings/Queue.js~Queue",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "ourthings/Queue.js~Queue#getCookie",
    "access": "public",
    "description": "Retrieve a cookie by name",
    "lineNumber": 748,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{*}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "name",
        "description": "Cookie name"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "*"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 99,
    "kind": "method",
    "name": "setCookie",
    "memberof": "ourthings/Queue.js~Queue",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "ourthings/Queue.js~Queue#setCookie",
    "access": "public",
    "description": "set a cookie by name and value",
    "lineNumber": 765,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{*}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "name",
        "description": "Cookie name"
      },
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "value",
        "description": "Value of cookie"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "*"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 100,
    "kind": "method",
    "name": "cleanMemory",
    "memberof": "ourthings/Queue.js~Queue",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "ourthings/Queue.js~Queue#cleanMemory",
    "access": "public",
    "description": "Called at the end of a queue run to flush any garbage",
    "lineNumber": 776,
    "params": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "pid",
        "description": ""
      }
    ],
    "return": null
  },
  {
    "__docId__": 101,
    "kind": "method",
    "name": "isWork",
    "memberof": "ourthings/Queue.js~Queue",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "ourthings/Queue.js~Queue#isWork",
    "access": "public",
    "description": "Is there any work to do in the queue?",
    "lineNumber": 790,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 102,
    "kind": "method",
    "name": "finished",
    "memberof": "ourthings/Queue.js~Queue",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "ourthings/Queue.js~Queue#finished",
    "access": "public",
    "description": " Called to flag a queue item as finished\n\n Normally hooked down from queueable this is a queue item saying I have finished in mode (see define.js)",
    "lineNumber": 808,
    "params": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "pid",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "mode",
        "description": ""
      }
    ],
    "return": null
  },
  {
    "__docId__": 103,
    "kind": "method",
    "name": "commandParse",
    "memberof": "ourthings/Queue.js~Queue",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "ourthings/Queue.js~Queue#commandParse",
    "access": "public",
    "description": "This will take a command string in the format object.command({},{}); and split it down\ninto it parts as an object\n\nTODO no concept of the context of the command IE was it from inside a div that need binding?",
    "lineNumber": 876,
    "params": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "command",
        "description": "{string}"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "object"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 104,
    "kind": "method",
    "name": "renderToDom",
    "memberof": "ourthings/Queue.js~Queue",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "ourthings/Queue.js~Queue#renderToDom",
    "access": "public",
    "description": "Render some text/html to the dom",
    "lineNumber": 919,
    "params": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "domObject",
        "description": "{object} - The object in the dom to write to"
      },
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "text",
        "description": "{string} - The text/HTML to write"
      },
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "mode",
        "description": "{number} - Mode to use while writing see define.js"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 105,
    "kind": "method",
    "name": "getIframeElements",
    "memberof": "ourthings/Queue.js~Queue",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "ourthings/Queue.js~Queue#getIframeElements",
    "access": "public",
    "description": "Finds elements in the dom of an iframe (or current document) using the query selector",
    "lineNumber": 937,
    "params": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "iframeTarget",
        "description": "Iframe or false"
      },
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "elementTarget",
        "description": "query"
      },
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "errorTrap",
        "description": "{boolean} Trap any errors?"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "object",
        "false"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 106,
    "kind": "method",
    "name": "getElement",
    "memberof": "ourthings/Queue.js~Queue",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "ourthings/Queue.js~Queue#getElement",
    "access": "public",
    "description": "Finds an element in the dom using the jquery formant IE #id .class tag (will only ever return one)",
    "lineNumber": 964,
    "params": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "elementTarget",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "errorTrap",
        "description": "{boolean} Trap any errors?"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "object",
        "false"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 107,
    "kind": "method",
    "name": "getElements",
    "memberof": "ourthings/Queue.js~Queue",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "ourthings/Queue.js~Queue#getElements",
    "access": "public",
    "description": "Finds an element(s) in the dom using the jquery formant IE #id .class tag (can return one or more)",
    "lineNumber": 979,
    "params": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "elementTarget",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "object",
        "false"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 108,
    "kind": "method",
    "name": "show",
    "memberof": "ourthings/Queue.js~Queue",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "ourthings/Queue.js~Queue#show",
    "access": "public",
    "description": " Show current queue status in the console DEBUG function",
    "lineNumber": 998,
    "params": [],
    "return": null
  },
  {
    "__docId__": 109,
    "kind": "method",
    "name": "prettyCommandObject",
    "memberof": "ourthings/Queue.js~Queue",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "ourthings/Queue.js~Queue#prettyCommandObject",
    "access": "public",
    "description": "Make a pretty version of the currrent commandObject and dump it to the console",
    "lineNumber": 1016,
    "params": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "commandObject",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "indent",
        "description": ""
      }
    ],
    "return": null
  },
  {
    "__docId__": 110,
    "kind": "method",
    "name": "reportError",
    "memberof": "ourthings/Queue.js~Queue",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "ourthings/Queue.js~Queue#reportError",
    "access": "public",
    "description": "Report an error to the console, adds various internal stats",
    "lineNumber": 1043,
    "params": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "error",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "message",
        "description": ""
      }
    ],
    "return": null
  },
  {
    "__docId__": 111,
    "kind": "method",
    "name": "deepCopy",
    "memberof": "ourthings/Queue.js~Queue",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "ourthings/Queue.js~Queue#deepCopy",
    "access": "public",
    "description": "Deep copy and object IE remove references",
    "lineNumber": 1054,
    "params": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "inputObject",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "any"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 112,
    "kind": "method",
    "name": "browserClasses",
    "memberof": "ourthings/Queue.js~Queue",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "ourthings/Queue.js~Queue#browserClasses",
    "access": "public",
    "description": "Adds classes for browser type to body for use in CSS",
    "lineNumber": 1061,
    "params": [],
    "return": null
  },
  {
    "__docId__": 113,
    "kind": "method",
    "name": "urlToJson",
    "memberof": "ourthings/Queue.js~Queue",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "ourthings/Queue.js~Queue#urlToJson",
    "access": "public",
    "description": "Get any params from the url in json format",
    "lineNumber": 1081,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 114,
    "kind": "file",
    "name": "ourthings/Queueable/Api.js",
    "content": "/** @module Api */\r\nimport Queueable from \"../Queueable\";\r\n\r\n/**\r\n * @classdesc\r\n *\r\n * Dom Elements manipulations\r\n *\r\n * @author Richard Reynolds richard@nautoguide.com\r\n *\r\n * @example\r\n * //\r\n *\r\n */\r\nexport default class Api extends Queueable {\r\n\r\n\t/**\r\n\t * Make a GET request\r\n\t *\r\n\t * @param {number} pid - Process ID\r\n\t * @param {object} json - queue arguments\r\n\t * @param {string} json.url - URL to make GET request to\r\n\t * @param {string} json.contentType=application/json - Content type to request\r\n\t * @param {string} json.header - header object to send (note Content-Type is overwritten by above setting)\r\n\t */\r\n\tget(pid,json) {\r\n\t\tlet self=this;\r\n\t\tjson.contentType=json.contentType||'application/json';\r\n\t\tlet headers=json.headers||{};\r\n\t\theaders['Content-Type']=json.contentType||'application/json';\r\n\t\tfetch(json.url, {\r\n\t\t\theaders: headers,\r\n\t\t})\r\n\t\t\t.then(response => self.queue.handleFetchErrors(response))\r\n\t\t\t.then(function(response) {\r\n\t\t\t\tswitch(json.contentType) {\r\n\t\t\t\t\tcase 'application/json':\r\n\t\t\t\t\t\treturn response.json();\r\n\t\t\t\t\tdefault:\r\n\t\t\t\t\t\treturn response.text();\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t\t.then(function (response) {\r\n\t\t\t\t/*\r\n\t\t\t\t * Convert the response to json and start the loader\r\n\t\t\t\t */\r\n\t\t\t\tself.set(pid,response);\r\n\t\t\t\tself.finished(pid,self.queue.DEFINE.FIN_OK);\r\n\r\n\t\t\t})\r\n\t\t\t.catch(function (error) {\r\n\t\t\t\tconsole.info(self.queue.DEFINE.CONSOLE_LINE);\r\n\t\t\t\tconsole.error('Error:', error);\r\n\t\t\t\tconsole.info(\"Warning this error is probably fatal as I have no templates to load\")\r\n\t\t\t});\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Make a POST request\r\n\t *\r\n\t * @param {number} pid - Process ID\r\n\t * @param {object} json - queue arguments\r\n\t * @param {string} json.url - URL to make GET request to\r\n\t * @param {string} json.contentType=application/json - Content type to request\r\n\t * @param {string} json.header - header object to send (note Content-Type is overwritten by above setting)\r\n\t * @param {string} json.body - object to send JSON.stringify is applies to this\r\n\t */\r\n\tpost(pid,json) {\r\n\t\tlet self=this;\r\n\t\tjson.contentType=json.contentType||'application/json';\r\n\t\tlet headers=json.headers||{};\r\n\t\theaders['Content-Type']=json.contentType||'application/json';\r\n\t\tfetch(json.url, {\r\n\t\t\theaders: headers,\r\n\t\t\tmethod: 'POST',\r\n\t\t\tbody: JSON.stringify(json.body)\r\n\t\t})\r\n\t\t\t.then(response => self.queue.handleFetchErrors(response))\r\n\t\t\t.then(function(response) {\r\n\t\t\t\tswitch(json.contentType) {\r\n\t\t\t\t\tcase 'application/json':\r\n\t\t\t\t\t\treturn response.json();\r\n\t\t\t\t\tdefault:\r\n\t\t\t\t\t\treturn response.text();\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t\t.then(function (response) {\r\n\t\t\t\t/*\r\n\t\t\t\t * Convert the response to json and start the loader\r\n\t\t\t\t */\r\n\t\t\t\tself.set(pid,response);\r\n\t\t\t\tself.finished(pid,self.queue.DEFINE.FIN_OK);\r\n\r\n\t\t\t})\r\n\t\t\t.catch(function (error) {\r\n\t\t\t\tconsole.info(self.queue.DEFINE.CONSOLE_LINE);\r\n\t\t\t\tconsole.error('Error:', error);\r\n\t\t\t\tconsole.info(\"Warning this error is probably fatal as I have no templates to load\")\r\n\t\t\t});\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Make a PUT request\r\n\t *\r\n\t * @param {number} pid - Process ID\r\n\t * @param {object} json - queue arguments\r\n\t * @param {string} json.url - URL to make PUT request to\r\n\t * @param {string} json.contentType=application/json - Content type to request\r\n\t * @param {string} json.header - header object to send (note Content-Type is overwritten by above setting)\r\n\t * @param {string} json.body - object to send JSON.stringify is applies to this\r\n\t */\r\n\tput(pid,json) {\r\n\t\tlet self=this;\r\n\t\tjson.contentType=json.contentType||'image/png';\r\n\t\tlet headers=json.headers||{};\r\n\t\theaders['Content-Type']=json.contentType;\r\n\t\tfetch(json.url, {\r\n\t\t\theaders: headers,\r\n\t\t\tmethod: 'PUT',\r\n\t\t\tbody: window.atob(json.body)\r\n\t\t})\r\n\t\t\t.then(response => self.queue.handleFetchErrors(response))\r\n\t\t\t.then(function(response) {\r\n\t\t\t\tswitch(json.contentType) {\r\n\t\t\t\t\tcase 'application/json':\r\n\t\t\t\t\t\treturn response.json();\r\n\t\t\t\t\tdefault:\r\n\t\t\t\t\t\treturn response.text();\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t\t.then(function (response) {\r\n\t\t\t\t/*\r\n\t\t\t\t * Convert the response to json and start the loader\r\n\t\t\t\t */\r\n\t\t\t\tself.set(pid,response);\r\n\t\t\t\tself.finished(pid,self.queue.DEFINE.FIN_OK);\r\n\r\n\t\t\t})\r\n\t\t\t.catch(function (error) {\r\n\t\t\t\tconsole.info(self.queue.DEFINE.CONSOLE_LINE);\r\n\t\t\t\tconsole.error('Error:', error);\r\n\t\t\t\tconsole.info(\"Warning this error is probably fatal as I have no templates to load\")\r\n\t\t\t});\r\n\r\n\t}\r\n}\r\n",
    "static": true,
    "longname": "C:/Users/xrout/Dropbox/machine/Work/webstorm/ourthings/src/ourthings/Queueable/Api.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 115,
    "kind": "class",
    "name": "Api",
    "memberof": "ourthings/Queueable/Api.js",
    "static": true,
    "longname": "ourthings/Queueable/Api.js~Api",
    "access": "public",
    "export": true,
    "importPath": "@nautoguide/ourthings/ourthings/Queueable/Api.js",
    "importStyle": "Api",
    "description": "",
    "examples": [
      "//"
    ],
    "lineNumber": 15,
    "unknown": [
      {
        "tagName": "@classdesc",
        "tagValue": "\nDom Elements manipulations"
      },
      {
        "tagName": "@author",
        "tagValue": "Richard Reynolds richard@nautoguide.com"
      }
    ],
    "interface": false,
    "extends": [
      "ourthings/Queueable.js~Queueable"
    ]
  },
  {
    "__docId__": 116,
    "kind": "method",
    "name": "get",
    "memberof": "ourthings/Queueable/Api.js~Api",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "ourthings/Queueable/Api.js~Api#get",
    "access": "public",
    "description": "Make a GET request",
    "lineNumber": 26,
    "params": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "pid",
        "description": "Process ID"
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "json",
        "description": "queue arguments"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "json.url",
        "description": "URL to make GET request to"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "defaultValue": "application/json",
        "defaultRaw": "application/json",
        "name": "json.contentType",
        "description": "Content type to request"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "json.header",
        "description": "header object to send (note Content-Type is overwritten by above setting)"
      }
    ],
    "return": null
  },
  {
    "__docId__": 117,
    "kind": "method",
    "name": "post",
    "memberof": "ourthings/Queueable/Api.js~Api",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "ourthings/Queueable/Api.js~Api#post",
    "access": "public",
    "description": "Make a POST request",
    "lineNumber": 69,
    "params": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "pid",
        "description": "Process ID"
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "json",
        "description": "queue arguments"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "json.url",
        "description": "URL to make GET request to"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "defaultValue": "application/json",
        "defaultRaw": "application/json",
        "name": "json.contentType",
        "description": "Content type to request"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "json.header",
        "description": "header object to send (note Content-Type is overwritten by above setting)"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "json.body",
        "description": "object to send JSON.stringify is applies to this"
      }
    ],
    "return": null
  },
  {
    "__docId__": 118,
    "kind": "method",
    "name": "put",
    "memberof": "ourthings/Queueable/Api.js~Api",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "ourthings/Queueable/Api.js~Api#put",
    "access": "public",
    "description": "Make a PUT request",
    "lineNumber": 114,
    "params": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "pid",
        "description": "Process ID"
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "json",
        "description": "queue arguments"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "json.url",
        "description": "URL to make PUT request to"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "defaultValue": "application/json",
        "defaultRaw": "application/json",
        "name": "json.contentType",
        "description": "Content type to request"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "json.header",
        "description": "header object to send (note Content-Type is overwritten by above setting)"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "json.body",
        "description": "object to send JSON.stringify is applies to this"
      }
    ],
    "return": null
  },
  {
    "__docId__": 119,
    "kind": "file",
    "name": "ourthings/Queueable/Browser.js",
    "content": "/** @module ourthings/Queueable/Browser */\r\nimport Queueable from \"../Queueable\";\r\n\r\n/**\r\n * @classdesc\r\n *\r\n * Browser Functions\r\n *\r\n * @author Richard Reynolds richard@nautoguide.com\r\n *\r\n * @example\r\n * //\r\n *\r\n */\r\nexport default class Browser extends Queueable {\r\n\r\n\r\n\t/**\r\n\t * Redirect browser to a new page\r\n\t * @param {number} pid - Process ID\r\n\t * @param {object} json - queue arguments\r\n\t * @param {string} json.location - Dom location to direct to\r\n\t */\r\n\tredirect(pid,json) {\r\n\t\tlet self=this;\r\n\t\twindow.top.location = json.location;\r\n\t\tself.finished(pid,self.queue.DEFINE.FIN_OK);\r\n\r\n\t}\r\n}\r\n",
    "static": true,
    "longname": "C:/Users/xrout/Dropbox/machine/Work/webstorm/ourthings/src/ourthings/Queueable/Browser.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 120,
    "kind": "class",
    "name": "Browser",
    "memberof": "ourthings/Queueable/Browser.js",
    "static": true,
    "longname": "ourthings/Queueable/Browser.js~Browser",
    "access": "public",
    "export": true,
    "importPath": "@nautoguide/ourthings/ourthings/Queueable/Browser.js",
    "importStyle": "Browser",
    "description": "",
    "examples": [
      "//"
    ],
    "lineNumber": 15,
    "unknown": [
      {
        "tagName": "@classdesc",
        "tagValue": "\nBrowser Functions"
      },
      {
        "tagName": "@author",
        "tagValue": "Richard Reynolds richard@nautoguide.com"
      }
    ],
    "interface": false,
    "extends": [
      "ourthings/Queueable.js~Queueable"
    ]
  },
  {
    "__docId__": 121,
    "kind": "method",
    "name": "redirect",
    "memberof": "ourthings/Queueable/Browser.js~Browser",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "ourthings/Queueable/Browser.js~Browser#redirect",
    "access": "public",
    "description": "Redirect browser to a new page",
    "lineNumber": 24,
    "params": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "pid",
        "description": "Process ID"
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "json",
        "description": "queue arguments"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "json.location",
        "description": "Dom location to direct to"
      }
    ],
    "return": null
  },
  {
    "__docId__": 122,
    "kind": "file",
    "name": "ourthings/Queueable/Elements.js",
    "content": "/** @module ourthings/Queueable/Elements */\r\nimport Queueable from \"../Queueable\";\r\n\r\n/**\r\n * @classdesc\r\n *\r\n * Dom Elements manipulations\r\n *\r\n * @author Richard Reynolds richard@nautoguide.com\r\n *\r\n * @example\r\n * elements.removeClass({\"targetId\":\".leftPanel\",\"class\":\"hidden\"});\r\n *\r\n */\r\nexport default class Elements extends Queueable {\r\n\r\n\t/**\r\n\t * Add a class to a dom element\r\n\t * @param {number} pid - Process ID\r\n\t * @param {object} json - queue arguments\r\n\t * @param {string} json.iframeId - iframe target\r\n\t * @param {string} json.targetId - Dom target\r\n\t * @param {string} json.class - Name of class to add\r\n\t *\r\n\t * @example\r\n\t * elements.addClass({\"targetId\":\".leftPanel\",\"class\":\"hidden\"});\r\n\t */\r\n\taddClass(pid,json) {\r\n\t\tlet self=this;\r\n\t\tlet elements=self.queue.getIframeElements(json.iframeId,json.targetId);\r\n\t\tself.set(pid,json);\r\n\r\n\t\tif(elements!==false) {\r\n\t\t\telements.forEach(function(element) {\r\n\t\t\t\telement.classList.add(json.class);\r\n\t\t\t});\r\n\t\t\tself.finished(pid,self.queue.DEFINE.FIN_OK);\r\n\t\t} else {\r\n\t\t\tself.finished(pid,self.queue.DEFINE.FIN_WARNING,'Could not add class ['+json.class+'] to ['+json.targetId+']');\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Remove a class to a dom element\r\n\t * @param {number} pid - Process ID\r\n\t * @param {object} json - queue arguments\r\n\t * @param {string} json.iframeId - iframe target\r\n\t * @param {string} json.targetId - Dom target\r\n\t * @param {string} json.class - Name of class to remove\r\n\t *\r\n\t * @example\r\n\t * elements.removeClass({\"targetId\":\".leftPanel\",\"class\":\"hidden\"});\r\n\t */\r\n\tremoveClass(pid,json) {\r\n\t\tlet self=this;\r\n\t\tlet elements=self.queue.getIframeElements(json.iframeId,json.targetId);\r\n\t\tself.set(pid,json);\r\n\t\tif(elements!==false) {\r\n\t\t\telements.forEach(function(element) {\r\n\t\t\t\telement.classList.remove(json.class);\r\n\t\t\t});\r\n\t\t\tself.finished(pid,self.queue.DEFINE.FIN_OK);\r\n\t\t} else {\r\n\t\t\tself.finished(pid,self.queue.DEFINE.FIN_WARNING,'Could not remove class ['+json.class+'] to ['+json.targetId+']');\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * toggle a class on a dom element\r\n\t * @param {number} pid - Process ID\r\n\t * @param {object} json - queue arguments\r\n\t * @param {string} json.targetId - Dom target\r\n\t * @param {string} json.class - Name of class to toggle\r\n\t *\r\n\t * @example\r\n\t * elements.toggleClass({\"targetId\":\".leftPanel\",\"class\":\"hidden\"});\r\n\t */\r\n\ttoggleClass(pid,json) {\r\n\t\tlet self=this;\r\n\t\tlet elements=self.queue.getIframeElements(json.iframeId,json.targetId);\r\n\t\tself.set(pid,json);\r\n\t\tif(elements!==false) {\r\n\t\t\telements.forEach(function(element) {\r\n\t\t\t\tif (element.classList.contains(json.class))\r\n\t\t\t\t\telement.classList.remove(json.class);\r\n\t\t\t\telse\r\n\t\t\t\t\telement.classList.add(json.class);\r\n\t\t\t});\r\n\t\t\tself.finished(pid,self.queue.DEFINE.FIN_OK);\r\n\t\t} else {\r\n\t\t\tself.finished(pid,self.queue.DEFINE.FIN_WARNING,'Could not remove class ['+json.class+'] to ['+json.targetId+']');\r\n\t\t}\r\n\t}\r\n\r\n    /**\r\n     * Set the HTML of an element\r\n     * @param {number} pid - Process ID\r\n     * @param {object} json - queue arguments\r\n     * @param {string} json.targetId - Dom target\r\n     * @param {string} json.html - HTML to add\r\n     *\r\n     * @example\r\n     * elements.innerHTML({\"targetId\":\".leftPanel\",\"html\":\"Hello World\"});\r\n\r\n     */\r\n\tinnerHTML(pid,json) {\r\n\t\tlet self=this;\r\n\t\tlet element=self.queue.getElement(json.targetId);\r\n\t\telement.innerHTML=json.html;\r\n\t\tself.finished(pid,self.queue.DEFINE.FIN_OK);\r\n\t}\r\n\r\n\t/**\r\n\t * Set the value of an input field\r\n\t * @param {number} pid - Process ID\r\n\t * @param {object} json - queue arguments\r\n\t * @param {string} json.targetId - Dom target\r\n\t * @param {string} json.value - value to set\r\n\t *\r\n\t * @example\r\n\t * elements.setInputValue({\"targetId\":\"#username\",\"value\":\"Hello World\"});\r\n\r\n\t */\r\n\tsetInputValue(pid,json) {\r\n\t\tlet self=this;\r\n\t\tlet element=self.queue.getElement(json.targetId);\r\n\t\telement.value=json.value;\r\n\t\tself.finished(pid,self.queue.DEFINE.FIN_OK);\r\n\t}\r\n\r\n\t/**\r\n\t * Monitor element(s) in a form and add classes on change\r\n\t * @param {number} pid - Process ID\r\n\t * @param {object} json - queue arguments\r\n\t * @param {string} json.targetId - elements(s) to monitor for change and add modifiedClass to\r\n\t * @param {string} json.buttonId - Element to add modifiedClass to\r\n\t * @param {string} json.modifiedClass - Class to add to modified elements\r\n\t * @param {string} json.modifiedQueue - Prepared queue to run when element modified\r\n\t *\r\n\t * @example\r\n\t * elements.formActivityMonitor({\"targetId\":\".functionMonitor\",\"buttonId\":\".form-save\",\"modifiedClass\":\"modified\"});\r\n\r\n\t */\r\n\tformActivityMonitor(pid,json) {\r\n\t\tlet self=this;\r\n\t\tlet elements=this.queue.getElements(json.targetId);\r\n\t\tlet button;\r\n\t\tif(json.buttonId)\r\n\t\t\tbutton=this.queue.getElement(json.buttonId);\r\n\t\telements.forEach(function(element) {\r\n\t\t\telement.addEventListener(\"change\", function () {\r\n\t\t\t\tif(json.modifiedQueue)\r\n\t\t\t\t\tself.queue.execute(json.modifiedQueue,{});\r\n\t\t\t\tif(json.modifiedClass) {\r\n\t\t\t\t\tthis.classList.add(json.modifiedClass);\r\n\t\t\t\t\tif(button)\r\n\t\t\t\t\t\tbutton.classList.add(json.modifiedClass);\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t\telement.addEventListener(\"keypress\", function () {\r\n\t\t\t\tif(json.modifiedQueue)\r\n\t\t\t\t\tself.queue.execute(json.modifiedQueue,{});\r\n\t\t\t\tif(json.modifiedClass) {\r\n\t\t\t\t\tthis.classList.add(json.modifiedClass);\r\n\t\t\t\t\tif(button)\r\n\t\t\t\t\t\tbutton.classList.add(json.modifiedClass);\r\n\t\t\t\t}\r\n\t\t\t});\r\n\r\n\t\t});\r\n\t\tthis.finished(pid,this.queue.DEFINE.FIN_OK);\r\n\t}\r\n}\r\n",
    "static": true,
    "longname": "C:/Users/xrout/Dropbox/machine/Work/webstorm/ourthings/src/ourthings/Queueable/Elements.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 123,
    "kind": "class",
    "name": "Elements",
    "memberof": "ourthings/Queueable/Elements.js",
    "static": true,
    "longname": "ourthings/Queueable/Elements.js~Elements",
    "access": "public",
    "export": true,
    "importPath": "@nautoguide/ourthings/ourthings/Queueable/Elements.js",
    "importStyle": "Elements",
    "description": "",
    "examples": [
      "elements.removeClass({\"targetId\":\".leftPanel\",\"class\":\"hidden\"});"
    ],
    "lineNumber": 15,
    "unknown": [
      {
        "tagName": "@classdesc",
        "tagValue": "\nDom Elements manipulations"
      },
      {
        "tagName": "@author",
        "tagValue": "Richard Reynolds richard@nautoguide.com"
      }
    ],
    "interface": false,
    "extends": [
      "ourthings/Queueable.js~Queueable"
    ]
  },
  {
    "__docId__": 124,
    "kind": "method",
    "name": "addClass",
    "memberof": "ourthings/Queueable/Elements.js~Elements",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "ourthings/Queueable/Elements.js~Elements#addClass",
    "access": "public",
    "description": "Add a class to a dom element",
    "examples": [
      "elements.addClass({\"targetId\":\".leftPanel\",\"class\":\"hidden\"});"
    ],
    "lineNumber": 28,
    "params": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "pid",
        "description": "Process ID"
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "json",
        "description": "queue arguments"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "json.iframeId",
        "description": "iframe target"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "json.targetId",
        "description": "Dom target"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "json.class",
        "description": "Name of class to add"
      }
    ],
    "return": null
  },
  {
    "__docId__": 125,
    "kind": "method",
    "name": "removeClass",
    "memberof": "ourthings/Queueable/Elements.js~Elements",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "ourthings/Queueable/Elements.js~Elements#removeClass",
    "access": "public",
    "description": "Remove a class to a dom element",
    "examples": [
      "elements.removeClass({\"targetId\":\".leftPanel\",\"class\":\"hidden\"});"
    ],
    "lineNumber": 54,
    "params": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "pid",
        "description": "Process ID"
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "json",
        "description": "queue arguments"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "json.iframeId",
        "description": "iframe target"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "json.targetId",
        "description": "Dom target"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "json.class",
        "description": "Name of class to remove"
      }
    ],
    "return": null
  },
  {
    "__docId__": 126,
    "kind": "method",
    "name": "toggleClass",
    "memberof": "ourthings/Queueable/Elements.js~Elements",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "ourthings/Queueable/Elements.js~Elements#toggleClass",
    "access": "public",
    "description": "toggle a class on a dom element",
    "examples": [
      "elements.toggleClass({\"targetId\":\".leftPanel\",\"class\":\"hidden\"});"
    ],
    "lineNumber": 78,
    "params": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "pid",
        "description": "Process ID"
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "json",
        "description": "queue arguments"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "json.targetId",
        "description": "Dom target"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "json.class",
        "description": "Name of class to toggle"
      }
    ],
    "return": null
  },
  {
    "__docId__": 127,
    "kind": "method",
    "name": "innerHTML",
    "memberof": "ourthings/Queueable/Elements.js~Elements",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "ourthings/Queueable/Elements.js~Elements#innerHTML",
    "access": "public",
    "description": "Set the HTML of an element",
    "examples": [
      "elements.innerHTML({\"targetId\":\".leftPanel\",\"html\":\"Hello World\"});"
    ],
    "lineNumber": 106,
    "params": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "pid",
        "description": "Process ID"
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "json",
        "description": "queue arguments"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "json.targetId",
        "description": "Dom target"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "json.html",
        "description": "HTML to add"
      }
    ],
    "return": null
  },
  {
    "__docId__": 128,
    "kind": "method",
    "name": "setInputValue",
    "memberof": "ourthings/Queueable/Elements.js~Elements",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "ourthings/Queueable/Elements.js~Elements#setInputValue",
    "access": "public",
    "description": "Set the value of an input field",
    "examples": [
      "elements.setInputValue({\"targetId\":\"#username\",\"value\":\"Hello World\"});"
    ],
    "lineNumber": 124,
    "params": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "pid",
        "description": "Process ID"
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "json",
        "description": "queue arguments"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "json.targetId",
        "description": "Dom target"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "json.value",
        "description": "value to set"
      }
    ],
    "return": null
  },
  {
    "__docId__": 129,
    "kind": "method",
    "name": "formActivityMonitor",
    "memberof": "ourthings/Queueable/Elements.js~Elements",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "ourthings/Queueable/Elements.js~Elements#formActivityMonitor",
    "access": "public",
    "description": "Monitor element(s) in a form and add classes on change",
    "examples": [
      "elements.formActivityMonitor({\"targetId\":\".functionMonitor\",\"buttonId\":\".form-save\",\"modifiedClass\":\"modified\"});"
    ],
    "lineNumber": 144,
    "params": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "pid",
        "description": "Process ID"
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "json",
        "description": "queue arguments"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "json.targetId",
        "description": "elements(s) to monitor for change and add modifiedClass to"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "json.buttonId",
        "description": "Element to add modifiedClass to"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "json.modifiedClass",
        "description": "Class to add to modified elements"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "json.modifiedQueue",
        "description": "Prepared queue to run when element modified"
      }
    ],
    "return": null
  },
  {
    "__docId__": 130,
    "kind": "file",
    "name": "ourthings/Queueable/Files.js",
    "content": "/** @module ourthings/Queueable/Files */\r\nimport Queueable from \"../Queueable\";\r\n\r\n/**\r\n * @classdesc\r\n *\r\n * File upload functions\r\n *\r\n * @author Richard Reynolds richard@nautoguide.com\r\n *\r\n * @example\r\n * //\r\n *\r\n */\r\nexport default class Files extends Queueable {\r\n\r\n\r\n\t/**\r\n\t * Load a file into memory with option to preview\r\n\t * @param {number} pid - Process ID\r\n\t * @param {object} json - queue arguments\r\n\t * @param {string} json.targetId - Dom location that contains the files input\r\n\t * @param {string} json.previewId - Dom location to put preview\r\n\t */\r\n\tclientLoad(pid,json) {\r\n\t\tlet self=this;\r\n\t\tlet element=self.queue.getElement(json.targetId);\r\n\t\tlet files=element.files;\r\n\t\tif(files&&files[0]) {\r\n\t\t\tlet reader = new FileReader();\r\n\t\t\treader.readAsDataURL(files[0]);\r\n\t\t\treader.onload = function (evt) {\r\n\t\t\t\tif(json.previewId) {\r\n\t\t\t\t\tlet preview=self.queue.getElement(json.previewId);\r\n\t\t\t\t\tpreview.src=evt.target.result;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tself.set(pid, evt.target.result);\r\n\t\t\t\t}\r\n\t\t\t\tself.finished(pid,self.queue.DEFINE.FIN_OK);\r\n\t\t\t};\r\n\t\t\treader.onerror = function (evt) {\r\n\t\t\t\t// TODO Write me!\r\n\t\t\t\tconsole.log('error');\r\n\t\t\t\tdebugger;\r\n\t\t\t\tself.finished(pid,self.queue.DEFINE.FIN_ERROR);\r\n\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Image preview\r\n\t * @param {number} pid - Process ID\r\n\t * @param {object} json - queue arguments\r\n\t * @param {string} json.targetId - Dom location that contains the files input\r\n\t * @param {string} json.previewId - Dom location to put preview\r\n\t */\r\n\tfilePreview(pid,json) {\r\n\t\tlet self=this;\r\n\t\tlet element=self.queue.getElement(json.targetId);\r\n\t\telement.addEventListener('change', function () {\r\n\t\t\tlet file=this.files[0];\r\n\t\t\tlet reader = new FileReader();\r\n\t\t\treader.readAsDataURL(file);\r\n\t\t\treader.onload = function (evt) {\r\n\t\t\t\tif(json.previewId) {\r\n\t\t\t\t\tlet preview=self.queue.getElement(json.previewId);\r\n\t\t\t\t\tpreview.src=evt.target.result;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tself.set(pid, evt.target.result);\r\n\t\t\t\t}\r\n\t\t\t\tself.finished(pid,self.queue.DEFINE.FIN_OK);\r\n\t\t\t};\r\n\t\t\treader.onerror = function (evt) {\r\n\t\t\t\t// TODO Write me!\r\n\t\t\t\tconsole.log('error');\r\n\t\t\t\tdebugger;\r\n\t\t\t\tself.finished(pid,self.queue.DEFINE.FIN_ERROR);\r\n\r\n\t\t\t};\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Upload fiel to S3\r\n\t * @param {number} pid - Process ID\r\n\t * @param {object} json - queue arguments\r\n\t * @param {string} json.targetId - Dom location that contains the files input\r\n\t * @param {string} json.contentType - Content type of file\r\n\t * @param {string} json.headers - Additional headers to send\r\n\t * @param {string} json.url - url to upload to\r\n\t */\r\n\tputFileToS3(pid,json) {\r\n\t\tlet self=this;\r\n\t\tjson.contentType=json.contentType||'image/png';\r\n\t\tlet headers=json.headers||{};\r\n\t\theaders['Content-Type']=json.contentType;\r\n\t\tlet element=self.queue.getElement(json.targetId);\r\n\t\tlet files=element.files;\r\n\t\tfetch(json.url, {\r\n\t\t\theaders: headers,\r\n\t\t\tmethod: 'PUT',\r\n\t\t\tbody: files[0]\r\n\t\t})\r\n\t\t\t.then(response => self.queue.handleFetchErrors(response))\r\n\t\t\t.then(function(response) {\r\n\t\t\t\tswitch(json.contentType) {\r\n\t\t\t\t\tcase 'application/json':\r\n\t\t\t\t\t\treturn response.json();\r\n\t\t\t\t\tdefault:\r\n\t\t\t\t\t\treturn response.text();\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t\t.then(function (response) {\r\n\t\t\t\t/*\r\n\t\t\t\t * Convert the response to json and start the loader\r\n\t\t\t\t */\r\n\t\t\t\tself.set(pid,response);\r\n\t\t\t\tself.finished(pid,self.queue.DEFINE.FIN_OK);\r\n\r\n\t\t\t})\r\n\t\t\t.catch(function (error) {\r\n\t\t\t\tconsole.info(self.queue.DEFINE.CONSOLE_LINE);\r\n\t\t\t\tconsole.error('Error:', error);\r\n\t\t\t\tconsole.info(\"Warning this error is probably fatal as I have no templates to load\")\r\n\t\t\t});\r\n\r\n\t}\r\n}\r\n",
    "static": true,
    "longname": "C:/Users/xrout/Dropbox/machine/Work/webstorm/ourthings/src/ourthings/Queueable/Files.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 131,
    "kind": "class",
    "name": "Files",
    "memberof": "ourthings/Queueable/Files.js",
    "static": true,
    "longname": "ourthings/Queueable/Files.js~Files",
    "access": "public",
    "export": true,
    "importPath": "@nautoguide/ourthings/ourthings/Queueable/Files.js",
    "importStyle": "Files",
    "description": "",
    "examples": [
      "//"
    ],
    "lineNumber": 15,
    "unknown": [
      {
        "tagName": "@classdesc",
        "tagValue": "\nFile upload functions"
      },
      {
        "tagName": "@author",
        "tagValue": "Richard Reynolds richard@nautoguide.com"
      }
    ],
    "interface": false,
    "extends": [
      "ourthings/Queueable.js~Queueable"
    ]
  },
  {
    "__docId__": 132,
    "kind": "method",
    "name": "clientLoad",
    "memberof": "ourthings/Queueable/Files.js~Files",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "ourthings/Queueable/Files.js~Files#clientLoad",
    "access": "public",
    "description": "Load a file into memory with option to preview",
    "lineNumber": 25,
    "params": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "pid",
        "description": "Process ID"
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "json",
        "description": "queue arguments"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "json.targetId",
        "description": "Dom location that contains the files input"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "json.previewId",
        "description": "Dom location to put preview"
      }
    ],
    "return": null
  },
  {
    "__docId__": 133,
    "kind": "method",
    "name": "filePreview",
    "memberof": "ourthings/Queueable/Files.js~Files",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "ourthings/Queueable/Files.js~Files#filePreview",
    "access": "public",
    "description": "Image preview",
    "lineNumber": 59,
    "params": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "pid",
        "description": "Process ID"
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "json",
        "description": "queue arguments"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "json.targetId",
        "description": "Dom location that contains the files input"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "json.previewId",
        "description": "Dom location to put preview"
      }
    ],
    "return": null
  },
  {
    "__docId__": 134,
    "kind": "method",
    "name": "putFileToS3",
    "memberof": "ourthings/Queueable/Files.js~Files",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "ourthings/Queueable/Files.js~Files#putFileToS3",
    "access": "public",
    "description": "Upload fiel to S3",
    "lineNumber": 94,
    "params": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "pid",
        "description": "Process ID"
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "json",
        "description": "queue arguments"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "json.targetId",
        "description": "Dom location that contains the files input"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "json.contentType",
        "description": "Content type of file"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "json.headers",
        "description": "Additional headers to send"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "json.url",
        "description": "url to upload to"
      }
    ],
    "return": null
  },
  {
    "__docId__": 135,
    "kind": "file",
    "name": "ourthings/Queueable/Internals.js",
    "content": "/** @module ourthings/Queueable/Internals */\r\nimport Queueable from \"../Queueable\";\r\n\r\n/**\r\n * @classdesc\r\n *\r\n * Internal queue functions exposed to queueables\r\n *\r\n * @author Richard Reynolds richard@nautoguide.com\r\n *\r\n *\r\n */\r\nexport default class Internals extends Queueable {\r\n\r\n\t/**\r\n\t * Execute a prepared queue\r\n\t * @param {int} pid - process ID\r\n\t * @param {object} json - queue arguments\r\n\t * @param {string} json.name - prepared queue to call\r\n\t * @param {object} [json.json] - New arguments to send to queue\r\n\t * @example\r\n\t * internals.execute({\"name\":\"myQueue\"});\r\n\t */\r\n\texecute(pid,json) {\r\n\t\tlet self=this;\r\n\t\tself.queue.execute(json.name,json.json);\r\n\t\tself.finished(pid,self.queue.DEFINE.FIN_OK);\r\n\t}\r\n\r\n\t/**\r\n\t * Check a statement and run prepared queue if its true\r\n\t * @param {int} pid - process ID\r\n\t * @param {object} json - queue arguments\r\n\t * @param {string} json.statement - statement to check\r\n\t * @param {string} json.name - prepared queue to call\r\n\t * @param {object} [json.json] - New arguments to send to queue\r\n\t * @example\r\n\t * internals.ifqueue({\"statement\":\"memory.loginAPI.value.token\",\"name\":\"loggedIn\"});\r\n\t */\r\n\tifqueue(pid,json) {\r\n\t\tlet self=this;\r\n\t\tif(eval(json.statement)) {\r\n\t\t\tself.queue.execute(json.name,json.json);\r\n\r\n\t\t}\r\n\t\tself.finished(pid,self.queue.DEFINE.FIN_OK);\r\n\t}\r\n\r\n\t/**\r\n\t * Set a memory value\r\n\t *\r\n\t * @param {int} pid - process ID\r\n\t * @param {object} json - queue arguments\r\n\t * @param {string} json.name - name of memory item\r\n\t * @param {*} json.value - value to set (can be any type)\r\n\t * @param {string} [json.mode] - [Garbage|Session|Permanent] Memory mode\r\n\t * @example\r\n\t * internals.setMemory({\"name\":\"test\",\"mode\":\"Session\",\"value\":\"Test String\"});\r\n\t * internals.setMemory({\"name\":\"test\",\"mode\":\"Session\",\"value\":{\"trueFalse\":[true,false],\"objects\":[{\"ElementOne\":\"Result One\"},{\"ElementTwo\":\"Result Two\"}]}});\r\n\t */\r\n\tsetMemory(pid,json) {\r\n\t\tlet self=this;\r\n\t\tself.queue.setMemory(json.name,json.value,json.mode);\r\n\t\tself.finished(pid,self.queue.DEFINE.FIN_OK);\r\n\r\n\t}\r\n}\r\n",
    "static": true,
    "longname": "C:/Users/xrout/Dropbox/machine/Work/webstorm/ourthings/src/ourthings/Queueable/Internals.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 136,
    "kind": "class",
    "name": "Internals",
    "memberof": "ourthings/Queueable/Internals.js",
    "static": true,
    "longname": "ourthings/Queueable/Internals.js~Internals",
    "access": "public",
    "export": true,
    "importPath": "@nautoguide/ourthings/ourthings/Queueable/Internals.js",
    "importStyle": "Internals",
    "description": "",
    "lineNumber": 13,
    "unknown": [
      {
        "tagName": "@classdesc",
        "tagValue": "\nInternal queue functions exposed to queueables"
      },
      {
        "tagName": "@author",
        "tagValue": "Richard Reynolds richard@nautoguide.com"
      }
    ],
    "interface": false,
    "extends": [
      "ourthings/Queueable.js~Queueable"
    ]
  },
  {
    "__docId__": 137,
    "kind": "method",
    "name": "execute",
    "memberof": "ourthings/Queueable/Internals.js~Internals",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "ourthings/Queueable/Internals.js~Internals#execute",
    "access": "public",
    "description": "Execute a prepared queue",
    "examples": [
      "internals.execute({\"name\":\"myQueue\"});"
    ],
    "lineNumber": 24,
    "params": [
      {
        "nullable": null,
        "types": [
          "int"
        ],
        "spread": false,
        "optional": false,
        "name": "pid",
        "description": "process ID"
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "json",
        "description": "queue arguments"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "json.name",
        "description": "prepared queue to call"
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": true,
        "name": "json.json",
        "description": "New arguments to send to queue"
      }
    ],
    "return": null
  },
  {
    "__docId__": 138,
    "kind": "method",
    "name": "ifqueue",
    "memberof": "ourthings/Queueable/Internals.js~Internals",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "ourthings/Queueable/Internals.js~Internals#ifqueue",
    "access": "public",
    "description": "Check a statement and run prepared queue if its true",
    "examples": [
      "internals.ifqueue({\"statement\":\"memory.loginAPI.value.token\",\"name\":\"loggedIn\"});"
    ],
    "lineNumber": 40,
    "params": [
      {
        "nullable": null,
        "types": [
          "int"
        ],
        "spread": false,
        "optional": false,
        "name": "pid",
        "description": "process ID"
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "json",
        "description": "queue arguments"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "json.statement",
        "description": "statement to check"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "json.name",
        "description": "prepared queue to call"
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": true,
        "name": "json.json",
        "description": "New arguments to send to queue"
      }
    ],
    "return": null
  },
  {
    "__docId__": 139,
    "kind": "method",
    "name": "setMemory",
    "memberof": "ourthings/Queueable/Internals.js~Internals",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "ourthings/Queueable/Internals.js~Internals#setMemory",
    "access": "public",
    "description": "Set a memory value",
    "examples": [
      "internals.setMemory({\"name\":\"test\",\"mode\":\"Session\",\"value\":\"Test String\"});\ninternals.setMemory({\"name\":\"test\",\"mode\":\"Session\",\"value\":{\"trueFalse\":[true,false],\"objects\":[{\"ElementOne\":\"Result One\"},{\"ElementTwo\":\"Result Two\"}]}});"
    ],
    "lineNumber": 61,
    "params": [
      {
        "nullable": null,
        "types": [
          "int"
        ],
        "spread": false,
        "optional": false,
        "name": "pid",
        "description": "process ID"
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "json",
        "description": "queue arguments"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "json.name",
        "description": "name of memory item"
      },
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "json.value",
        "description": "value to set (can be any type)"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "name": "json.mode",
        "description": "[Garbage|Session|Permanent] Memory mode"
      }
    ],
    "return": null
  },
  {
    "__docId__": 140,
    "kind": "file",
    "name": "ourthings/Queueable/Openlayers.js",
    "content": "/** @module Openlayers */\r\nimport Queueable from \"../Queueable\";\r\nimport {Map, View, Feature} from 'ol';\r\nimport {getWidth, getTopLeft} from 'ol/extent.js';\r\n\r\nimport TileLayer from 'ol/layer/Tile';\r\nimport VectorLayer from 'ol/layer/Vector';\r\nimport VectorSource from 'ol/source/Vector';\r\nimport Disposable from 'ol/Disposable';\r\nimport OSM from 'ol/source/OSM';\r\nimport WMTS from 'ol/source/WMTS';\r\nimport WMTSTileGrid  from 'ol/tilegrid/WMTS';\r\nimport WKT from 'ol/format/WKT';\r\n\r\nimport GeoJSON from 'ol/format/GeoJSON';\r\nimport {fromLonLat,units,epsg3857,epsg4326} from 'ol/proj';\r\nimport Select from 'ol/interaction/Select.js';\r\nimport {click, pointerMove, altKeyOnly} from 'ol/events/condition.js';\r\nimport proj4 from \"proj4\";\r\nimport {register} from 'ol/proj/proj4';\r\nimport {get as getProjection} from 'ol/proj'\r\n\r\nproj4.defs([\r\n\t[\"EPSG:27700\", \"+proj=tmerc +lat_0=49 +lon_0=-2 +k=0.999601 +x_0=400000 +y_0=-100000 +ellps=airy +towgs84=446.448,-125.157,542.060,0.1502,0.2470,0.8421,-20.4894 +datum=OSGB36 +units=m +no_defs\"]\r\n]);\r\n\r\nregister(proj4);\r\n\r\n\r\n\r\n\r\n/**\r\n * @classdesc\r\n *\r\n * Openlayers Hook\r\n *\r\n * @author Richard Reynolds richard@nautoguide.com\r\n *\r\n * @example\r\n * //\r\n *\r\n * @description You need to add \"ol\": \"^5.3.0\" to your package.json to build with openlayers\r\n *\r\n */\r\nexport default class Openlayers extends Queueable {\r\n\r\n\tinit(queue) {\r\n\t\tlet self=this;\r\n\t\tself.queue=queue;\r\n\r\n\t\tself.maps={};\r\n\r\n\t\tself.ready=true;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * Create a new map\r\n\t * @param {int} pid - process ID\r\n\t * @param {object} json - queue arguments\r\n\t * @param {string} json.map - name for the map (used to reference)\r\n\t * @param {string} json.target - id of element in the page to target\r\n\t * @param {int} json.zoom - statement to check\r\n\t * @param {array} json.center - Center on\r\n\t * @param {string} json.renderer - Renderers to use\r\n\t * @example\r\n\t * openlayer.addMap();\r\n\t *\r\n\t */\r\n\taddMap(pid,json) {\r\n\t\tlet self=this;\r\n\t\tlet options=Object.assign({\r\n\t\t\t\"map\":\"default\",\r\n\t\t\t\"zoom\": 0,\r\n\t\t\t\"renderer\": ['webgl', 'canvas'],\r\n\t\t\t\"target\":\"map\",\r\n\t\t\t\"center\":[0,0],\r\n\t\t\t\"projection\": \"EPSG:3857\"\r\n\t\t},json);\r\n\t\tlet projection =  getProjection(options.projection);\r\n\t\tconst map = new Map({\r\n\t\t\ttarget: options.target,\r\n\t\t\tview: new View({\r\n\t\t\t\tcenter: options.center,\r\n\t\t\t\tzoom: options.zoom,\r\n\t\t\t\trenderer: options.renderer,\r\n\t\t\t\tprojection: projection,\r\n\t\t\t\tresolutions: options.resolutions,\r\n\t\t\t\textent: options.extent,\r\n\t\t\t})\r\n\t\t});\r\n\t\tself.maps[options.map]={\"object\":map,\"layers\":{}};\r\n\t\tself.finished(pid,self.queue.DEFINE.FIN_OK);\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * Add a layer to the map\r\n\t * @param {int} pid - process ID\r\n\t * @param {object} json - queue arguments\r\n\t * @param {string} json.map - name for the map (used to reference)\r\n\t * @param {string} json.name - name for the layer (used to reference)\r\n\t * @param {string} json.typr - Layer type osm,vector\r\n\t * @param {float} json.opacity - layer opacity\r\n\t * @param {boolean} json.transparent - is the layer transparent?\r\n\t * @param {string} json.style - Style object to use\r\n\t * @param {boolean} json.active - Is the layer active\r\n\t * @param {object|string} json.geojson - geojson to add to the layer (vector)\r\n\t * @example\r\n\t * openlayer.addLayer();\r\n\t *\r\n\t */\r\n\r\n\taddLayer(pid,json) {\r\n\t\tlet self=this;\r\n\t\tlet options=Object.assign({\r\n\t\t\t\"map\":\"default\",\r\n\t\t\t\"name\":\"default\",\r\n\t\t\t\"opacity\": 1,\r\n\t\t\t\"transparent\": false,\r\n\t\t\t\"active\": true\r\n\t\t},json);\r\n\t\tlet map=self.maps[options.map].object;\r\n\t\tlet olLayer = null;\r\n\r\n\t\t/*\r\n\t\t * If we had a style specified then we need to check if it needs expanding\r\n\t\t */\r\n\t\tif(options.style!==undefined&&typeof options.style!=='object')\r\n\t\t\toptions.style=eval(options.style);\r\n\r\n\t\t/*\r\n\t\t * Find the requested layer type as a function\r\n\t\t */\r\n\t\tlet layerFunction = self[\"_addLayer_\" + options.type];\r\n\t\tif (typeof layerFunction === \"function\") {\r\n\t\t\tolLayer = layerFunction.apply(self, [options]);\r\n\t\t}\r\n\t\telse {\r\n\t\t\tself.finished(pid,self.queue.DEFINE.FIN_ERROR,\"No add layer function for \" + options.type);\r\n\t\t\treturn false;\r\n\t\t}\r\n\t\t/*\r\n\t\t * Add the layer and update the the maps object with the new layers\r\n\t\t */\r\n\t\tmap.addLayer(olLayer);\r\n\t\tself.maps[options.map].layers[options.name]=olLayer;\r\n\t\tself.finished(pid,self.queue.DEFINE.FIN_OK);\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Add an osm layer\r\n\t * @param options\r\n\t * @return {TileLayer}\r\n\t * @private\r\n\t */\r\n\t_addLayer_osm(options) {\r\n\t\tlet olLayer=new TileLayer({\r\n\t\t\tsource: new OSM()\r\n\t\t});\r\n\t\treturn olLayer;\r\n\t}\r\n\r\n\t/**\r\n\t * Add an wmts layer\r\n\t * @param options\r\n\t * @return {TileLayer}\r\n\t * @private\r\n\t */\r\n\t_addLayer_wmts(options) {\r\n\t\tlet self=this;\r\n\t\tlet map=self.maps[options.map].object;\r\n\t\tlet view=map.getView();\r\n\t\tlet source= new WMTS({\r\n\t\t\turl: options.url,\r\n\t\t\tlayer: options.layer,\r\n\t\t\tmatrixSet: options.matrixSet,\r\n\t\t\tformat: 'image/png',\r\n\t\t\tcrossOrigin: 'anonymous',\r\n\t\t\tprojection: view.getProjection(),\r\n\t\t\ttileGrid: new WMTSTileGrid({\r\n\t\t\t\tresolutions: view.getResolutions(),\r\n\t\t\t\tmatrixIds: options.matrix,\r\n\t\t\t\torigin: options.origin\r\n\r\n\t\t\t})\r\n\t\t});\r\n\t\tlet olLayer = new TileLayer({\r\n\t\t\textent: options.extent,\r\n\t\t\topacity: options.opacity,\r\n\t\t\tvisible: options.active,\r\n\t\t\tname: options.name,\r\n\t\t\tsource: source\r\n\t\t});\r\n\r\n\t\treturn olLayer;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Add a vector layer\r\n\t * @param options\r\n\t * @return {VectorLayer}\r\n\t * @private\r\n\t */\r\n\t_addLayer_vector(options) {\r\n\t\tlet self=this;\r\n\t\tlet source={};\r\n\t\tlet vectorSource;\r\n\t\tif(options.geojson!==undefined) {\r\n\t\t\tif(typeof options.geojson==='object') {\r\n\t\t\t\tsource.features = (new GeoJSON({})).readFeatures(options.geojson, {featureProjection: self.maps[options.map].object.getView().getProjection()});\r\n\t\t\t} else {\r\n\t\t\t\tsource.features = (new GeoJSON({})).readFeatures(eval(options.geojson), {featureProjection: self.maps[options.map].object.getView().getProjection()});\r\n\t\t\t}\r\n\t\t}\r\n\t\tvectorSource = new VectorSource(source);\r\n\t\tlet olLayer = new VectorLayer({\r\n\t\t\tname: options.name,\r\n\t\t\tvisible: options.active,\r\n\t\t\tsource: vectorSource,\r\n\t\t\tstyle: options.style,\r\n\t\t\topacity: options.opacity,\r\n\t\t\tselectable: options.selectable,\r\n\t\t\thover: options.hover\r\n\t\t});\r\n\t\treturn olLayer;\r\n\t}\r\n\r\n\t/**\r\n\t * Use the standard openlayers select control\r\n\t * @param pid\r\n\t * @param json\r\n\t *\r\n\t * @description This select control uses the default openlayers model. Useful for applications with no overlapping features. It does not support selecting hidden features\r\n\t */\r\n\tsimpleSelect(pid,json) {\r\n\t\tlet self=this;\r\n\t\tlet options=Object.assign({\r\n\t\t\t\"map\":\"default\",\r\n\t\t\tcondition:\"click\"\r\n\t\t},json);\r\n\r\n\t\tlet selector = new Select();\r\n\t\tself.maps[options.map].object.addInteraction(selector);\r\n\t\tselector.on('select', function(e) {\r\n\t\t\tconsole.log(e);\r\n\t\t\tself.queue.setMemory('simpleSelect', e, \"Session\");\r\n\t\t\tself.queue.execute(\"simpleSelect\");\r\n\t\t});\r\n\t\tself.finished(pid,self.queue.DEFINE.FIN_OK);\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Add a feature to the Map\r\n\t * TODO: This is old code for getting something working. Needs functionising, not for production\r\n\t * @param pid\r\n\t * @param json\r\n\t */\r\n\taddFeature(pid,json) {\r\n\t\tlet self=this;\r\n\t\tlet options=Object.assign({\r\n\t\t\t\"map\":\"default\",\r\n\t\t\t\"layer\":\"default\",\r\n\t\t\t\"values\":{}\r\n\t\t},json);\r\n\r\n\t\tlet map=self.maps[options.map].object;\r\n\t\tlet layer=self.maps[options.map].layers[options.layer];\r\n\t\tlet view=map.getView();\r\n\t\tlet source=layer.getSource();\r\n\t\tconsole.log(layer);\r\n\r\n\t\tlet projection = \"EPSG:\" + options.geometry.match(/SRID=(.*?);/)[1];\r\n\t\tlet wkt = options.geometry.replace(/SRID=(.*?);/, '');\r\n\r\n\t\tlet format = new WKT();\r\n\t\tlet feature = format.readFeature(wkt);\r\n\t\toptions.values.geometry = feature.getGeometry().transform(projection, view.getProjection().getCode());\r\n\t\tsource.addFeature(new Feature(options.values));\r\n\t\tself.finished(pid,self.queue.DEFINE.FIN_OK);\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Add geojson features to a layer\r\n\t * @param pid\r\n\t * @param json\r\n\t * @param {string} json.map - Map reference\r\n\t * @param {string} json.layer - Layer to get extent from\r\n\t * @param {string} json.gejson - geojson\r\n\t */\r\n\taddGeojson(pid,json) {\r\n\t\tlet self=this;\r\n\t\tlet options=Object.assign({\r\n\t\t\t\"map\":\"default\",\r\n\t\t\t\"layer\":\"default\",\r\n\t\t\t\"geojson\":{}\r\n\t\t},json);\r\n\t\tlet map=self.maps[options.map].object;\r\n\t\tlet layer=self.maps[options.map].layers[options.layer];\r\n\t\tlet source = layer.getSource();\r\n\r\n\t\tlet view = map.getView();\r\n\r\n\t\tlet features = new GeoJSON().readFeatures(options.geojson, {\r\n\t\t\tfeatureProjection: view.getProjection().getCode()\r\n\t\t});\r\n\t\tsource.addFeatures(features);\r\n\t\tself.finished(pid,self.queue.DEFINE.FIN_OK);\r\n\r\n\t}\r\n\t/**\r\n\t * Zoom a layer to the extent of its features (needs appropriate zoom levels to work well\r\n\t * @param pid\r\n\t * @param json\r\n\t * @param {string} json.map - Map reference\r\n\t * @param {string} json.layer - Layer to get extent from\r\n\t * @example\r\n\t * openlayers.zoomToLayerExtent({\"map\":\"map_1\",\"layer\":\"data\"});\r\n\t */\r\n\tzoomToLayerExtent(pid,json) {\r\n\t\tlet self=this;\r\n\t\tlet options=Object.assign({\r\n\t\t\t\"map\":\"default\",\r\n\t\t\t\"layer\":\"default\"\r\n\t\t},json);\r\n\t\t/*\r\n\t\t * Pull all our resources\r\n\t\t */\r\n\t\tlet map=self.maps[options.map].object;\r\n\t\tlet view = map.getView();\r\n\t\tlet layer=self.maps[options.map].layers[options.layer];\r\n\t\tlet source = layer.getSource();\r\n\t\t/*\r\n\t\t * Get the extent of the features and fit them\r\n\t\t */\r\n\t\tlet extent = source.getExtent();\r\n\t\tview.fit(extent, map.getSize());\r\n\r\n\t\tself.finished(pid,self.queue.DEFINE.FIN_OK);\r\n\t}\r\n\t/**\r\n\t * Update size of map (in the event of resize or rotation this will fix it)\r\n\t * @param pid\r\n\t * @param json\r\n\t * @param {string} json.map - Map reference can be * and all maps will be targeted\r\n\t * @example\r\n\t * openlayers.updateSize({\"map\":\"map_1\"});\r\n\t */\r\n\tupdateSize(pid,json) {\r\n\t\tlet self=this;\r\n\t\tlet options=Object.assign({\r\n\t\t\t\"map\":\"default\",\r\n\t\t},json);\r\n\t\t/*\r\n\t\t * Pull all our resources\r\n\t\t */\r\n\t\tif(json.map===\"*\") {\r\n\t\t\tfor(let i in self.maps) {\r\n\t\t\t\tlet map=self.maps[i].object;\r\n\t\t\t\tmap.updateSize();\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tlet map = self.maps[options.map].object;\r\n\t\t\tmap.updateSize();\r\n\t\t}\r\n\t\tself.finished(pid,self.queue.DEFINE.FIN_OK);\r\n\r\n\t}\r\n}\r\n",
    "static": true,
    "longname": "C:/Users/xrout/Dropbox/machine/Work/webstorm/ourthings/src/ourthings/Queueable/Openlayers.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 141,
    "kind": "class",
    "name": "Openlayers",
    "memberof": "ourthings/Queueable/Openlayers.js",
    "static": true,
    "longname": "ourthings/Queueable/Openlayers.js~Openlayers",
    "access": "public",
    "export": true,
    "importPath": "@nautoguide/ourthings/ourthings/Queueable/Openlayers.js",
    "importStyle": "Openlayers",
    "description": "",
    "examples": [
      "//"
    ],
    "lineNumber": 45,
    "unknown": [
      {
        "tagName": "@classdesc",
        "tagValue": "\nOpenlayers Hook"
      },
      {
        "tagName": "@author",
        "tagValue": "Richard Reynolds richard@nautoguide.com"
      },
      {
        "tagName": "@description",
        "tagValue": "You need to add \"ol\": \"^5.3.0\" to your package.json to build with openlayers"
      }
    ],
    "interface": false,
    "extends": [
      "ourthings/Queueable.js~Queueable"
    ]
  },
  {
    "__docId__": 142,
    "kind": "method",
    "name": "init",
    "memberof": "ourthings/Queueable/Openlayers.js~Openlayers",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "ourthings/Queueable/Openlayers.js~Openlayers#init",
    "access": "public",
    "description": null,
    "lineNumber": 47,
    "undocument": true,
    "params": [
      {
        "name": "queue",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 143,
    "kind": "method",
    "name": "addMap",
    "memberof": "ourthings/Queueable/Openlayers.js~Openlayers",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "ourthings/Queueable/Openlayers.js~Openlayers#addMap",
    "access": "public",
    "description": "\nCreate a new map",
    "examples": [
      "openlayer.addMap();"
    ],
    "lineNumber": 70,
    "params": [
      {
        "nullable": null,
        "types": [
          "int"
        ],
        "spread": false,
        "optional": false,
        "name": "pid",
        "description": "process ID"
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "json",
        "description": "queue arguments"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "json.map",
        "description": "name for the map (used to reference)"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "json.target",
        "description": "id of element in the page to target"
      },
      {
        "nullable": null,
        "types": [
          "int"
        ],
        "spread": false,
        "optional": false,
        "name": "json.zoom",
        "description": "statement to check"
      },
      {
        "nullable": null,
        "types": [
          "array"
        ],
        "spread": false,
        "optional": false,
        "name": "json.center",
        "description": "Center on"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "json.renderer",
        "description": "Renderers to use"
      }
    ],
    "return": null
  },
  {
    "__docId__": 144,
    "kind": "method",
    "name": "addLayer",
    "memberof": "ourthings/Queueable/Openlayers.js~Openlayers",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "ourthings/Queueable/Openlayers.js~Openlayers#addLayer",
    "access": "public",
    "description": "\nAdd a layer to the map",
    "examples": [
      "openlayer.addLayer();"
    ],
    "lineNumber": 114,
    "params": [
      {
        "nullable": null,
        "types": [
          "int"
        ],
        "spread": false,
        "optional": false,
        "name": "pid",
        "description": "process ID"
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "json",
        "description": "queue arguments"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "json.map",
        "description": "name for the map (used to reference)"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "json.name",
        "description": "name for the layer (used to reference)"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "json.typr",
        "description": "Layer type osm,vector"
      },
      {
        "nullable": null,
        "types": [
          "float"
        ],
        "spread": false,
        "optional": false,
        "name": "json.opacity",
        "description": "layer opacity"
      },
      {
        "nullable": null,
        "types": [
          "boolean"
        ],
        "spread": false,
        "optional": false,
        "name": "json.transparent",
        "description": "is the layer transparent?"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "json.style",
        "description": "Style object to use"
      },
      {
        "nullable": null,
        "types": [
          "boolean"
        ],
        "spread": false,
        "optional": false,
        "name": "json.active",
        "description": "Is the layer active"
      },
      {
        "nullable": null,
        "types": [
          "object",
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "json.geojson",
        "description": "geojson to add to the layer (vector)"
      }
    ],
    "return": {
      "types": [
        "boolean"
      ]
    }
  },
  {
    "__docId__": 145,
    "kind": "method",
    "name": "_addLayer_osm",
    "memberof": "ourthings/Queueable/Openlayers.js~Openlayers",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "ourthings/Queueable/Openlayers.js~Openlayers#_addLayer_osm",
    "access": "private",
    "description": "Add an osm layer",
    "lineNumber": 158,
    "params": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "options",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "TileLayer"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 146,
    "kind": "method",
    "name": "_addLayer_wmts",
    "memberof": "ourthings/Queueable/Openlayers.js~Openlayers",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "ourthings/Queueable/Openlayers.js~Openlayers#_addLayer_wmts",
    "access": "private",
    "description": "Add an wmts layer",
    "lineNumber": 171,
    "params": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "options",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "TileLayer"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 147,
    "kind": "method",
    "name": "_addLayer_vector",
    "memberof": "ourthings/Queueable/Openlayers.js~Openlayers",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "ourthings/Queueable/Openlayers.js~Openlayers#_addLayer_vector",
    "access": "private",
    "description": "Add a vector layer",
    "lineNumber": 207,
    "params": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "options",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "VectorLayer"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 148,
    "kind": "method",
    "name": "simpleSelect",
    "memberof": "ourthings/Queueable/Openlayers.js~Openlayers",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "ourthings/Queueable/Openlayers.js~Openlayers#simpleSelect",
    "access": "public",
    "description": "Use the standard openlayers select control",
    "lineNumber": 238,
    "unknown": [
      {
        "tagName": "@description",
        "tagValue": "This select control uses the default openlayers model. Useful for applications with no overlapping features. It does not support selecting hidden features"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "pid",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "json",
        "description": ""
      }
    ],
    "return": null
  },
  {
    "__docId__": 149,
    "kind": "method",
    "name": "addFeature",
    "memberof": "ourthings/Queueable/Openlayers.js~Openlayers",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "ourthings/Queueable/Openlayers.js~Openlayers#addFeature",
    "access": "public",
    "description": "Add a feature to the Map\nTODO: This is old code for getting something working. Needs functionising, not for production",
    "lineNumber": 262,
    "params": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "pid",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "json",
        "description": ""
      }
    ],
    "return": null
  },
  {
    "__docId__": 150,
    "kind": "method",
    "name": "addGeojson",
    "memberof": "ourthings/Queueable/Openlayers.js~Openlayers",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "ourthings/Queueable/Openlayers.js~Openlayers#addGeojson",
    "access": "public",
    "description": "Add geojson features to a layer",
    "lineNumber": 295,
    "params": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "pid",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "json",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "json.map",
        "description": "Map reference"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "json.layer",
        "description": "Layer to get extent from"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "json.gejson",
        "description": "geojson"
      }
    ],
    "return": null
  },
  {
    "__docId__": 151,
    "kind": "method",
    "name": "zoomToLayerExtent",
    "memberof": "ourthings/Queueable/Openlayers.js~Openlayers",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "ourthings/Queueable/Openlayers.js~Openlayers#zoomToLayerExtent",
    "access": "public",
    "description": "Zoom a layer to the extent of its features (needs appropriate zoom levels to work well",
    "examples": [
      "openlayers.zoomToLayerExtent({\"map\":\"map_1\",\"layer\":\"data\"});"
    ],
    "lineNumber": 324,
    "params": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "pid",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "json",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "json.map",
        "description": "Map reference"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "json.layer",
        "description": "Layer to get extent from"
      }
    ],
    "return": null
  },
  {
    "__docId__": 152,
    "kind": "method",
    "name": "updateSize",
    "memberof": "ourthings/Queueable/Openlayers.js~Openlayers",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "ourthings/Queueable/Openlayers.js~Openlayers#updateSize",
    "access": "public",
    "description": "Update size of map (in the event of resize or rotation this will fix it)",
    "examples": [
      "openlayers.updateSize({\"map\":\"map_1\"});"
    ],
    "lineNumber": 353,
    "params": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "pid",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "json",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "json.map",
        "description": "Map reference can be * and all maps will be targeted"
      }
    ],
    "return": null
  },
  {
    "__docId__": 153,
    "kind": "file",
    "name": "ourthings/Queueable/Templates.js",
    "content": "/** @module ourthings/Queueable/Templates */\r\nimport Queueable from \"../Queueable\";\r\n\r\n/**\r\n * @classdesc\r\n *\r\n * Template manipulations\r\n *\r\n * @author Richard Reynolds richard@nautoguide.com\r\n *\r\n * @example\r\n * templates.render({\"targetId\":\"content\",\"template\":\"basic\"});\r\n *\r\n */\r\nclass Templates extends Queueable {\r\n\r\n\t/**\r\n\t * Render a template into the dom using the queues templateProcessor\r\n\t * @param {number} pid - Process ID\r\n\t * @param {object} json - queue arguments\r\n\t * @param {string} json.template - dom id of template to use\r\n\t * @param {string} [json.target] - dom id of render target\r\n\t * @example\r\n\t * templates.render({\"targetId\":\"content\",\"template\":\"basic\"});\r\n\t */\r\n\trender(pid,json) {\r\n\t\tlet self=this;\r\n\t\tself.set(pid,json);\r\n\t\tif(!self.queue.templateProcessor(json.template,json.targetId))\r\n\t\t\tself.finished(pid,self.queue.DEFINE.FIN_ERROR,'Could not render template');\r\n\t\telse\r\n\t\t\tself.finished(pid,self.queue.DEFINE.FIN_OK);\r\n\t}\r\n}\r\n\r\nexport default Templates;",
    "static": true,
    "longname": "C:/Users/xrout/Dropbox/machine/Work/webstorm/ourthings/src/ourthings/Queueable/Templates.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 154,
    "kind": "class",
    "name": "Templates",
    "memberof": "ourthings/Queueable/Templates.js",
    "static": true,
    "longname": "ourthings/Queueable/Templates.js~Templates",
    "access": "public",
    "export": true,
    "importPath": "@nautoguide/ourthings/ourthings/Queueable/Templates.js",
    "importStyle": "Templates",
    "description": "",
    "examples": [
      "templates.render({\"targetId\":\"content\",\"template\":\"basic\"});"
    ],
    "lineNumber": 15,
    "unknown": [
      {
        "tagName": "@classdesc",
        "tagValue": "\nTemplate manipulations"
      },
      {
        "tagName": "@author",
        "tagValue": "Richard Reynolds richard@nautoguide.com"
      }
    ],
    "interface": false,
    "extends": [
      "ourthings/Queueable.js~Queueable"
    ]
  },
  {
    "__docId__": 155,
    "kind": "method",
    "name": "render",
    "memberof": "ourthings/Queueable/Templates.js~Templates",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "ourthings/Queueable/Templates.js~Templates#render",
    "access": "public",
    "description": "Render a template into the dom using the queues templateProcessor",
    "examples": [
      "templates.render({\"targetId\":\"content\",\"template\":\"basic\"});"
    ],
    "lineNumber": 26,
    "params": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "pid",
        "description": "Process ID"
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "json",
        "description": "queue arguments"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "json.template",
        "description": "dom id of template to use"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "name": "json.target",
        "description": "dom id of render target"
      }
    ],
    "return": null
  },
  {
    "__docId__": 156,
    "kind": "file",
    "name": "ourthings/Queueable/W3Menu.js",
    "content": "/** @module ourthings/Queueable/W3Menu */\r\nimport Queueable from \"../Queueable\";\r\n\r\n/**\r\n * @classdesc W3C Menu implementation see: https://www.w3.org/TR/wai-aria-practices/examples/menu-button/menu-button-actions.html\r\n *\r\n * @description W3C Menu implementation see: https://www.w3.org/TR/wai-aria-practices/examples/menu-button/menu-button-actions.html\r\n *\r\n * For queue intergration you can add 'data-queue' attribute to cause a menu item to run a prepared queue\r\n *\r\n * @author Richard Reynolds richard@nautoguide.com\r\n *\r\n * @example\r\n * \tw3menu.initMenu({\"targetId\":\"#menubutton1\"});\r\n *\r\n */\r\nexport default class W3Menu extends Queueable {\r\n\r\n\t/**\r\n\t * Start the menu on assigned targetId\r\n\t *\r\n\t * @description W3C Menu implementation see: https://www.w3.org/TR/wai-aria-practices/examples/menu-button/menu-button-actions.html\r\n\r\n\t * @param {number} pid - Process ID\r\n\t * @param {object} json - queue arguments\r\n\t * @param {string} json.targetId - Dom target of the w3c menu html\r\n\t *\r\n\t * @example\r\n\t * w3menu.initMenu({\"targetId\":\"#menubutton1\"});\r\n\t */\r\n\tinitMenu(pid,json) {\r\n\t\tlet self=this;\r\n\t\tlet element=self.queue.getElement(json.targetId);\r\n\t\telement.setAttribute(\"data-bound\",\"true\");\r\n\t\tlet menubutton = new Menubutton(element);\r\n\t\tmenubutton.init();\r\n\t\tself.finished(pid,self.queue.DEFINE.FIN_OK);\r\n\t}\r\n}\r\n\r\n/*\r\n*   This content is licensed according to the W3C Software License at\r\n*   https://www.w3.org/Consortium/Legal/2015/copyright-software-and-document\r\n*\r\n*   File:   Menubutton.js\r\n*\r\n*   Desc:   Menubutton widget that implements ARIA Authoring Practices\r\n*/\r\n\r\n/*\r\n*   @constructor MenuButton\r\n*\r\n*   @desc\r\n*       Object that configures menu item elements by setting tabIndex\r\n*       and registering itself to handle pertinent events.\r\n*\r\n*       While menuitem elements handle many keydown events, as well as\r\n*       focus and blur events, they do not maintain any state variables,\r\n*       delegating those responsibilities to its associated menu object.\r\n*\r\n*       Consequently, it is only necessary to create one instance of\r\n*       MenubuttonItem from within the menu object; its configure method\r\n*       can then be called on each menuitem element.\r\n*\r\n*   @param domNode\r\n*       The DOM element node that serves as the menu item container.\r\n*       The menuObj PopupMenu is responsible for checking that it has\r\n*       requisite metadata, e.g. role=\"menuitem\".\r\n*\r\n*\r\n*/\r\nlet Menubutton = function (domNode) {\r\n\r\n\tthis.domNode   = domNode;\r\n\tthis.popupMenu = false;\r\n\r\n\tthis.hasFocus = false;\r\n\tthis.hasHover = false;\r\n\r\n\tthis.keyCode = Object.freeze({\r\n\t\t'TAB': 9,\r\n\t\t'RETURN': 13,\r\n\t\t'ESC': 27,\r\n\t\t'SPACE': 32,\r\n\t\t'PAGEUP': 33,\r\n\t\t'PAGEDOWN': 34,\r\n\t\t'END': 35,\r\n\t\t'HOME': 36,\r\n\t\t'LEFT': 37,\r\n\t\t'UP': 38,\r\n\t\t'RIGHT': 39,\r\n\t\t'DOWN': 40\r\n\t});\r\n};\r\n\r\nMenubutton.prototype.init = function () {\r\n\r\n\tthis.domNode.setAttribute('aria-haspopup', 'true');\r\n\r\n\tthis.domNode.addEventListener('keydown', this.handleKeydown.bind(this));\r\n\tthis.domNode.addEventListener('click', this.handleClick.bind(this));\r\n\tthis.domNode.addEventListener('focus', this.handleFocus.bind(this));\r\n\tthis.domNode.addEventListener('blur', this.handleBlur.bind(this));\r\n\tthis.domNode.addEventListener('mouseover', this.handleMouseover.bind(this));\r\n\tthis.domNode.addEventListener('mouseout', this.handleMouseout.bind(this));\r\n\r\n\t// initialize pop up menus\r\n\r\n\tvar popupMenu = document.getElementById(this.domNode.getAttribute('aria-controls'));\r\n\r\n\tif (popupMenu) {\r\n\t\tif (popupMenu.getAttribute('aria-activedescendant')) {\r\n\t\t\tthis.popupMenu = new PopupMenuActionActivedescendant(popupMenu, this);\r\n\t\t\tthis.popupMenu.init();\r\n\t\t}\r\n\t\telse {\r\n\t\t\tthis.popupMenu = new PopupMenuAction(popupMenu, this);\r\n\t\t\tthis.popupMenu.init();\r\n\t\t}\r\n\t}\r\n\r\n};\r\n\r\nMenubutton.prototype.handleKeydown = function (event) {\r\n\tlet flag = false;\r\n\r\n\tswitch (event.keyCode) {\r\n\t\tcase this.keyCode.SPACE:\r\n\t\tcase this.keyCode.RETURN:\r\n\t\tcase this.keyCode.DOWN:\r\n\t\t\tif (this.popupMenu) {\r\n\t\t\t\tthis.popupMenu.open();\r\n\t\t\t\tthis.popupMenu.setFocusToFirstItem();\r\n\t\t\t}\r\n\t\t\tflag = true;\r\n\t\t\tbreak;\r\n\r\n\t\tcase this.keyCode.UP:\r\n\t\t\tif (this.popupMenu) {\r\n\t\t\t\tthis.popupMenu.open();\r\n\t\t\t\tthis.popupMenu.setFocusToLastItem();\r\n\t\t\t\tflag = true;\r\n\t\t\t}\r\n\t\t\tbreak;\r\n\r\n\t\tdefault:\r\n\t\t\tbreak;\r\n\t}\r\n\r\n\tif (flag) {\r\n\t\tevent.stopPropagation();\r\n\t\tevent.preventDefault();\r\n\t}\r\n};\r\n\r\nMenubutton.prototype.handleClick = function (event) {\r\n\tif (this.domNode.getAttribute('aria-expanded') == 'true') {\r\n\t\tthis.popupMenu.close(true);\r\n\t}\r\n\telse {\r\n\t\tthis.popupMenu.open();\r\n\t\tthis.popupMenu.setFocusToFirstItem();\r\n\t}\r\n};\r\n\r\nMenubutton.prototype.handleFocus = function (event) {\r\n\tthis.popupMenu.hasFocus = true;\r\n};\r\n\r\nMenubutton.prototype.handleBlur = function (event) {\r\n\tthis.popupMenu.hasFocus = false;\r\n\tsetTimeout(this.popupMenu.close.bind(this.popupMenu, false), 300);\r\n\r\n};\r\n\r\nMenubutton.prototype.handleMouseover = function (event) {\r\n\tthis.hasHover = true;\r\n\tthis.popupMenu.open();\r\n};\r\n\r\nMenubutton.prototype.handleMouseout = function (event) {\r\n\tthis.hasHover = false;\r\n\tsetTimeout(this.popupMenu.close.bind(this.popupMenu, false), 300);\r\n};\r\n\r\n/*\r\n*   This content is licensed according to the W3C Software License at\r\n*   https://www.w3.org/Consortium/Legal/2015/copyright-software-and-document\r\n*\r\n*   File:   MenuItem.js\r\n*\r\n*   Desc:   Popup Menu Menuitem widget that implements ARIA Authoring Practices\r\n*/\r\n\r\n/*\r\n*   @constructor MenuItem\r\n*\r\n*   @desc\r\n*       Wrapper object for a simple menu item in a popup menu\r\n*\r\n*   @param domNode\r\n*       The DOM element node that serves as the menu item container.\r\n*       The menuObj PopupMenu is responsible for checking that it has\r\n*       requisite metadata, e.g. role=\"menuitem\".\r\n*\r\n*   @param menuObj\r\n*       The object that is a wrapper for the PopupMenu DOM element that\r\n*       contains the menu item DOM element. See PopupMenuAction.js\r\n*/\r\nlet PopupMenuItem = function (domNode, popupMenuObj) {\r\n\r\n\tthis.domNode   = domNode;\r\n\tthis.popupMenu = popupMenuObj;\r\n\r\n\tthis.keyCode = Object.freeze({\r\n\t\t'TAB': 9,\r\n\t\t'RETURN': 13,\r\n\t\t'ESC': 27,\r\n\t\t'SPACE': 32,\r\n\t\t'PAGEUP': 33,\r\n\t\t'PAGEDOWN': 34,\r\n\t\t'END': 35,\r\n\t\t'HOME': 36,\r\n\t\t'LEFT': 37,\r\n\t\t'UP': 38,\r\n\t\t'RIGHT': 39,\r\n\t\t'DOWN': 40\r\n\t});\r\n};\r\n\r\nPopupMenuItem.prototype.init = function () {\r\n\tthis.domNode.tabIndex = -1;\r\n\r\n\tif (!this.domNode.getAttribute('role')) {\r\n\t\tthis.domNode.setAttribute('role', 'menuitem');\r\n\t}\r\n\r\n\tthis.domNode.addEventListener('keydown',    this.handleKeydown.bind(this));\r\n\tthis.domNode.addEventListener('click',      this.handleClick.bind(this));\r\n\tthis.domNode.addEventListener('focus',      this.handleFocus.bind(this));\r\n\tthis.domNode.addEventListener('blur',       this.handleBlur.bind(this));\r\n\tthis.domNode.addEventListener('mouseover',  this.handleMouseover.bind(this));\r\n\tthis.domNode.addEventListener('mouseout',   this.handleMouseout.bind(this));\r\n\r\n};\r\n\r\n/* EVENT HANDLERS */\r\n\r\nPopupMenuItem.prototype.handleKeydown = function (event) {\r\n\tlet flag = false,\r\n\t\tchar = event.key;\r\n\r\n\tfunction isPrintableCharacter (str) {\r\n\t\treturn str.length === 1 && str.match(/\\S/);\r\n\t}\r\n\r\n\tif (event.ctrlKey || event.altKey  || event.metaKey) {\r\n\t\treturn;\r\n\t}\r\n\r\n\tif (event.shiftKey) {\r\n\t\tif (isPrintableCharacter(char)) {\r\n\t\t\tthis.popupMenu.setFocusByFirstCharacter(this, char);\r\n\t\t}\r\n\t}\r\n\telse {\r\n\r\n\t\tswitch (event.keyCode) {\r\n\t\t\tcase this.keyCode.SPACE:\r\n\t\t\t\tflag = true;\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase this.keyCode.RETURN:\r\n\t\t\t\tthis.handleClick(event);\r\n\t\t\t\tflag = true;\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase this.keyCode.ESC:\r\n\t\t\t\tthis.popupMenu.setFocusToController();\r\n\t\t\t\tthis.popupMenu.close(true);\r\n\t\t\t\tflag = true;\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase this.keyCode.UP:\r\n\t\t\t\tthis.popupMenu.setFocusToPreviousItem(this);\r\n\t\t\t\tflag = true;\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase this.keyCode.DOWN:\r\n\t\t\t\tthis.popupMenu.setFocusToNextItem(this);\r\n\t\t\t\tflag = true;\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase this.keyCode.HOME:\r\n\t\t\tcase this.keyCode.PAGEUP:\r\n\t\t\t\tthis.popupMenu.setFocusToFirstItem();\r\n\t\t\t\tflag = true;\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase this.keyCode.END:\r\n\t\t\tcase this.keyCode.PAGEDOWN:\r\n\t\t\t\tthis.popupMenu.setFocusToLastItem();\r\n\t\t\t\tflag = true;\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase this.keyCode.TAB:\r\n\t\t\t\tthis.popupMenu.setFocusToController();\r\n\t\t\t\tthis.popupMenu.close(true);\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tdefault:\r\n\t\t\t\tif (isPrintableCharacter(char)) {\r\n\t\t\t\t\tthis.popupMenu.setFocusByFirstCharacter(this, char);\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\t}\r\n\r\n\tif (flag) {\r\n\t\tevent.stopPropagation();\r\n\t\tevent.preventDefault();\r\n\t}\r\n};\r\n\r\nPopupMenuItem.prototype.handleClick = function (event) {\r\n\tqueue.execute(event.srcElement.getAttribute('data-queue'));\r\n\tthis.popupMenu.setFocusToController();\r\n\tthis.popupMenu.close(true);\r\n};\r\n\r\nPopupMenuItem.prototype.handleFocus = function (event) {\r\n\tthis.popupMenu.hasFocus = true;\r\n};\r\n\r\nPopupMenuItem.prototype.handleBlur = function (event) {\r\n\tthis.popupMenu.hasFocus = false;\r\n\tsetTimeout(this.popupMenu.close.bind(this.popupMenu, false), 300);\r\n};\r\n\r\nPopupMenuItem.prototype.handleMouseover = function (event) {\r\n\tthis.popupMenu.hasHover = true;\r\n\tthis.popupMenu.open();\r\n\r\n};\r\n\r\nPopupMenuItem.prototype.handleMouseout = function (event) {\r\n\tthis.popupMenu.hasHover = false;\r\n\tsetTimeout(this.popupMenu.close.bind(this.popupMenu, false), 300);\r\n};\r\n\r\n/*\r\n*   This content is licensed according to the W3C Software License at\r\n*   https://www.w3.org/Consortium/Legal/2015/copyright-software-and-document\r\n*\r\n*   File:   PopupMenuAction.js\r\n*\r\n*   Desc:   Popup menu widget that implements ARIA Authoring Practices\r\n*/\r\n\r\n/*\r\n*   @constructor PopupMenuAction\r\n*\r\n*   @desc\r\n*       Wrapper object for a simple popup menu (without nested submenus)\r\n*\r\n*   @param domNode\r\n*       The DOM element node that serves as the popup menu container. Each\r\n*       child element of domNode that represents a menuitem must have a\r\n*       'role' attribute with value 'menuitem'.\r\n*\r\n*   @param controllerObj\r\n*       The object that is a wrapper for the DOM element that controls the\r\n*       menu, e.g. a button element, with an 'aria-controls' attribute that\r\n*       references this menu's domNode. See MenuButton.js\r\n*\r\n*       The controller object is expected to have the following properties:\r\n*       1. domNode: The controller object's DOM element node, needed for\r\n*          retrieving positioning information.\r\n*       2. hasHover: boolean that indicates whether the controller object's\r\n*          domNode has responded to a mouseover event with no subsequent\r\n*          mouseout event having occurred.\r\n*/\r\nlet PopupMenuAction = function (domNode, controllerObj) {\r\n\tlet elementChildren,\r\n\t\tmsgPrefix = 'PopupMenu constructor argument domNode ';\r\n\r\n\t// Check whether domNode is a DOM element\r\n\tif (!domNode instanceof Element) {\r\n\t\tthrow new TypeError(msgPrefix + 'is not a DOM Element.');\r\n\t}\r\n\r\n\t// Check whether domNode has child elements\r\n\tif (domNode.childElementCount === 0) {\r\n\t\tthrow new Error(msgPrefix + 'has no element children.');\r\n\t}\r\n\r\n\t// Check whether domNode child elements are A elements\r\n\tlet childElement = domNode.firstElementChild;\r\n\twhile (childElement) {\r\n\t\tlet menuitem = childElement.firstElementChild;\r\n\t\tif (menuitem && menuitem === 'A') {\r\n\t\t\tthrow new Error(msgPrefix + 'Cannot have descendant elements are A elements.');\r\n\t\t}\r\n\t\tchildElement = childElement.nextElementSibling;\r\n\t}\r\n\r\n\tthis.domNode = domNode;\r\n\tthis.controller = controllerObj;\r\n\r\n\tthis.menuitems  = [];      // see PopupMenu init method\r\n\tthis.firstChars = [];      // see PopupMenu init method\r\n\r\n\tthis.firstItem  = null;    // see PopupMenu init method\r\n\tthis.lastItem   = null;    // see PopupMenu init method\r\n\r\n\tthis.hasFocus   = false;   // see MenuItem handleFocus, handleBlur\r\n\tthis.hasHover   = false;   // see PopupMenu handleMouseover, handleMouseout\r\n};\r\n\r\n/*\r\n*   @method PopupMenuAction.prototype.init\r\n*\r\n*   @desc\r\n*       Add domNode event listeners for mouseover and mouseout. Traverse\r\n*       domNode children to configure each menuitem and populate menuitems\r\n*       array. Initialize firstItem and lastItem properties.\r\n*/\r\nPopupMenuAction.prototype.init = function () {\r\n\tlet childElement, menuElement, firstChildElement, menuItem, textContent, numItems, label;\r\n\r\n\t// Configure the domNode itself\r\n\tthis.domNode.tabIndex = -1;\r\n\r\n\tthis.domNode.setAttribute('role', 'menu');\r\n\r\n\tif (!this.domNode.getAttribute('aria-labelledby') && !this.domNode.getAttribute('aria-label') && !this.domNode.getAttribute('title')) {\r\n\t\tlabel = this.controller.domNode.innerHTML;\r\n\t\tthis.domNode.setAttribute('aria-label', label);\r\n\t}\r\n\r\n\tthis.domNode.addEventListener('mouseover', this.handleMouseover.bind(this));\r\n\tthis.domNode.addEventListener('mouseout',  this.handleMouseout.bind(this));\r\n\r\n\t// Traverse the element children of domNode: configure each with\r\n\t// menuitem role behavior and store reference in menuitems array.\r\n\tlet menuElements = this.domNode.getElementsByTagName('LI');\r\n\r\n\tfor (let i = 0; i < menuElements.length; i++) {\r\n\r\n\t\tmenuElement = menuElements[i];\r\n\r\n\t\tif (!menuElement.firstElementChild && menuElement.getAttribute('role') != 'separator') {\r\n\t\t\tmenuItem = new PopupMenuItem(menuElement, this);\r\n\t\t\tmenuItem.init();\r\n\t\t\tthis.menuitems.push(menuItem);\r\n\t\t\ttextContent = menuElement.textContent.trim();\r\n\t\t\tthis.firstChars.push(textContent.substring(0, 1).toLowerCase());\r\n\t\t}\r\n\t}\r\n\r\n\t// Use populated menuitems array to initialize firstItem and lastItem.\r\n\tnumItems = this.menuitems.length;\r\n\tif (numItems > 0) {\r\n\t\tthis.firstItem = this.menuitems[0];\r\n\t\tthis.lastItem  = this.menuitems[numItems - 1];\r\n\t}\r\n};\r\n\r\n/* EVENT HANDLERS */\r\n\r\nPopupMenuAction.prototype.handleMouseover = function (event) {\r\n\tthis.hasHover = true;\r\n};\r\n\r\nPopupMenuAction.prototype.handleMouseout = function (event) {\r\n\tthis.hasHover = false;\r\n\tsetTimeout(this.close.bind(this, false), 300);\r\n};\r\n\r\n/* FOCUS MANAGEMENT METHODS */\r\n\r\nPopupMenuAction.prototype.setFocusToController = function (command) {\r\n\tif (typeof command !== 'string') {\r\n\t\tcommand = '';\r\n\t}\r\n\r\n\tif (command === 'previous') {\r\n\t\tthis.controller.menubutton.setFocusToPreviousItem(this.controller);\r\n\t}\r\n\telse {\r\n\t\tif (command === 'next') {\r\n\t\t\tthis.controller.menubutton.setFocusToNextItem(this.controller);\r\n\t\t}\r\n\t\telse {\r\n\t\t\tthis.controller.domNode.focus();\r\n\t\t}\r\n\t}\r\n};\r\n\r\nPopupMenuAction.prototype.setFocusToFirstItem = function () {\r\n\tthis.firstItem.domNode.focus();\r\n};\r\n\r\nPopupMenuAction.prototype.setFocusToLastItem = function () {\r\n\tthis.lastItem.domNode.focus();\r\n};\r\n\r\nPopupMenuAction.prototype.setFocusToPreviousItem = function (currentItem) {\r\n\tlet index;\r\n\r\n\tif (currentItem === this.firstItem) {\r\n\t\tthis.lastItem.domNode.focus();\r\n\t}\r\n\telse {\r\n\t\tindex = this.menuitems.indexOf(currentItem);\r\n\t\tthis.menuitems[index - 1].domNode.focus();\r\n\t}\r\n};\r\n\r\nPopupMenuAction.prototype.setFocusToNextItem = function (currentItem) {\r\n\tlet index;\r\n\r\n\tif (currentItem === this.lastItem) {\r\n\t\tthis.firstItem.domNode.focus();\r\n\t}\r\n\telse {\r\n\t\tindex = this.menuitems.indexOf(currentItem);\r\n\t\tthis.menuitems[index + 1].domNode.focus();\r\n\t}\r\n};\r\n\r\nPopupMenuAction.prototype.setFocusByFirstCharacter = function (currentItem, char) {\r\n\tlet start, index;\r\n\tchar = char.toLowerCase();\r\n\r\n\t// Get start index for search based on position of currentItem\r\n\tstart = this.menuitems.indexOf(currentItem) + 1;\r\n\tif (start === this.menuitems.length) {\r\n\t\tstart = 0;\r\n\t}\r\n\r\n\t// Check remaining slots in the menu\r\n\tindex = this.getIndexFirstChars(start, char);\r\n\r\n\t// If not found in remaining slots, check from beginning\r\n\tif (index === -1) {\r\n\t\tindex = this.getIndexFirstChars(0, char);\r\n\t}\r\n\r\n\t// If match was found...\r\n\tif (index > -1) {\r\n\t\tthis.menuitems[index].domNode.focus();\r\n\t}\r\n};\r\n\r\nPopupMenuAction.prototype.getIndexFirstChars = function (startIndex, char) {\r\n\tfor (let i = startIndex; i < this.firstChars.length; i++) {\r\n\t\tif (char === this.firstChars[i]) {\r\n\t\t\treturn i;\r\n\t\t}\r\n\t}\r\n\treturn -1;\r\n};\r\n\r\n/* MENU DISPLAY METHODS */\r\n\r\nPopupMenuAction.prototype.open = function () {\r\n\t// get bounding rectangle of controller object's DOM node\r\n\tlet rect = this.controller.domNode.getBoundingClientRect();\r\n\r\n\t// set CSS properties\r\n\tthis.domNode.style.display = 'block';\r\n\tthis.domNode.style.position = 'absolute';\r\n\tthis.domNode.style.top  = rect.height + 'px';\r\n\tthis.domNode.style.left = '0px';\r\n\r\n\t// set aria-expanded attribute\r\n\tthis.controller.domNode.setAttribute('aria-expanded', 'true');\r\n};\r\n\r\nPopupMenuAction.prototype.close = function (force) {\r\n\tif (typeof force !== 'boolean') {\r\n\t\tforce = false;\r\n\t}\r\n\r\n\tif (force || (!this.hasFocus && !this.hasHover && !this.controller.hasHover)) {\r\n\t\tthis.domNode.style.display = 'none';\r\n\t\tthis.controller.domNode.removeAttribute('aria-expanded');\r\n\t}\r\n};",
    "static": true,
    "longname": "C:/Users/xrout/Dropbox/machine/Work/webstorm/ourthings/src/ourthings/Queueable/W3Menu.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 157,
    "kind": "class",
    "name": "W3Menu",
    "memberof": "ourthings/Queueable/W3Menu.js",
    "static": true,
    "longname": "ourthings/Queueable/W3Menu.js~W3Menu",
    "access": "public",
    "export": true,
    "importPath": "@nautoguide/ourthings/ourthings/Queueable/W3Menu.js",
    "importStyle": "W3Menu",
    "description": "",
    "examples": [
      "\tw3menu.initMenu({\"targetId\":\"#menubutton1\"});"
    ],
    "lineNumber": 17,
    "unknown": [
      {
        "tagName": "@classdesc",
        "tagValue": "W3C Menu implementation see: https://www.w3.org/TR/wai-aria-practices/examples/menu-button/menu-button-actions.html"
      },
      {
        "tagName": "@description",
        "tagValue": "W3C Menu implementation see: https://www.w3.org/TR/wai-aria-practices/examples/menu-button/menu-button-actions.html\n\nFor queue intergration you can add 'data-queue' attribute to cause a menu item to run a prepared queue"
      },
      {
        "tagName": "@author",
        "tagValue": "Richard Reynolds richard@nautoguide.com"
      }
    ],
    "interface": false,
    "extends": [
      "ourthings/Queueable.js~Queueable"
    ]
  },
  {
    "__docId__": 158,
    "kind": "method",
    "name": "initMenu",
    "memberof": "ourthings/Queueable/W3Menu.js~W3Menu",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "ourthings/Queueable/W3Menu.js~W3Menu#initMenu",
    "access": "public",
    "description": "Start the menu on assigned targetId",
    "examples": [
      "w3menu.initMenu({\"targetId\":\"#menubutton1\"});"
    ],
    "lineNumber": 31,
    "unknown": [
      {
        "tagName": "@description",
        "tagValue": "W3C Menu implementation see: https://www.w3.org/TR/wai-aria-practices/examples/menu-button/menu-button-actions.html"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "pid",
        "description": "Process ID"
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "json",
        "description": "queue arguments"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "json.targetId",
        "description": "Dom target of the w3c menu html"
      }
    ],
    "return": null
  },
  {
    "__docId__": 159,
    "kind": "function",
    "name": "Menubutton",
    "memberof": "ourthings/Queueable/W3Menu.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "ourthings/Queueable/W3Menu.js~Menubutton",
    "access": "public",
    "export": false,
    "importPath": "@nautoguide/ourthings/ourthings/Queueable/W3Menu.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 72,
    "undocument": true,
    "params": [
      {
        "name": "domNode",
        "types": [
          "*"
        ]
      }
    ],
    "return": null,
    "ignore": true
  },
  {
    "__docId__": 160,
    "kind": "function",
    "name": "init",
    "memberof": "ourthings/Queueable/W3Menu.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "ourthings/Queueable/W3Menu.js~init",
    "access": "public",
    "export": false,
    "importPath": "@nautoguide/ourthings/ourthings/Queueable/W3Menu.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 96,
    "undocument": true,
    "params": [],
    "return": null,
    "ignore": true
  },
  {
    "__docId__": 161,
    "kind": "function",
    "name": "handleKeydown",
    "memberof": "ourthings/Queueable/W3Menu.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "ourthings/Queueable/W3Menu.js~handleKeydown",
    "access": "public",
    "export": false,
    "importPath": "@nautoguide/ourthings/ourthings/Queueable/W3Menu.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 124,
    "undocument": true,
    "params": [
      {
        "name": "event",
        "types": [
          "*"
        ]
      }
    ],
    "return": null,
    "ignore": true
  },
  {
    "__docId__": 162,
    "kind": "function",
    "name": "handleClick",
    "memberof": "ourthings/Queueable/W3Menu.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "ourthings/Queueable/W3Menu.js~handleClick",
    "access": "public",
    "export": false,
    "importPath": "@nautoguide/ourthings/ourthings/Queueable/W3Menu.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 156,
    "undocument": true,
    "params": [
      {
        "name": "event",
        "types": [
          "*"
        ]
      }
    ],
    "return": null,
    "ignore": true
  },
  {
    "__docId__": 163,
    "kind": "function",
    "name": "handleFocus",
    "memberof": "ourthings/Queueable/W3Menu.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "ourthings/Queueable/W3Menu.js~handleFocus",
    "access": "public",
    "export": false,
    "importPath": "@nautoguide/ourthings/ourthings/Queueable/W3Menu.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 166,
    "undocument": true,
    "params": [
      {
        "name": "event",
        "types": [
          "*"
        ]
      }
    ],
    "return": null,
    "ignore": true
  },
  {
    "__docId__": 164,
    "kind": "function",
    "name": "handleBlur",
    "memberof": "ourthings/Queueable/W3Menu.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "ourthings/Queueable/W3Menu.js~handleBlur",
    "access": "public",
    "export": false,
    "importPath": "@nautoguide/ourthings/ourthings/Queueable/W3Menu.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 170,
    "undocument": true,
    "params": [
      {
        "name": "event",
        "types": [
          "*"
        ]
      }
    ],
    "return": null,
    "ignore": true
  },
  {
    "__docId__": 165,
    "kind": "function",
    "name": "handleMouseover",
    "memberof": "ourthings/Queueable/W3Menu.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "ourthings/Queueable/W3Menu.js~handleMouseover",
    "access": "public",
    "export": false,
    "importPath": "@nautoguide/ourthings/ourthings/Queueable/W3Menu.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 176,
    "undocument": true,
    "params": [
      {
        "name": "event",
        "types": [
          "*"
        ]
      }
    ],
    "return": null,
    "ignore": true
  },
  {
    "__docId__": 166,
    "kind": "function",
    "name": "handleMouseout",
    "memberof": "ourthings/Queueable/W3Menu.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "ourthings/Queueable/W3Menu.js~handleMouseout",
    "access": "public",
    "export": false,
    "importPath": "@nautoguide/ourthings/ourthings/Queueable/W3Menu.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 181,
    "undocument": true,
    "params": [
      {
        "name": "event",
        "types": [
          "*"
        ]
      }
    ],
    "return": null,
    "ignore": true
  },
  {
    "__docId__": 167,
    "kind": "function",
    "name": "PopupMenuItem",
    "memberof": "ourthings/Queueable/W3Menu.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "ourthings/Queueable/W3Menu.js~PopupMenuItem",
    "access": "public",
    "export": false,
    "importPath": "@nautoguide/ourthings/ourthings/Queueable/W3Menu.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 210,
    "undocument": true,
    "params": [
      {
        "name": "domNode",
        "types": [
          "*"
        ]
      },
      {
        "name": "popupMenuObj",
        "types": [
          "*"
        ]
      }
    ],
    "return": null,
    "ignore": true
  },
  {
    "__docId__": 168,
    "kind": "function",
    "name": "init",
    "memberof": "ourthings/Queueable/W3Menu.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "ourthings/Queueable/W3Menu.js~init",
    "access": "public",
    "export": false,
    "importPath": "@nautoguide/ourthings/ourthings/Queueable/W3Menu.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 231,
    "undocument": true,
    "params": [],
    "return": null,
    "ignore": true
  },
  {
    "__docId__": 169,
    "kind": "function",
    "name": "handleKeydown",
    "memberof": "ourthings/Queueable/W3Menu.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "ourthings/Queueable/W3Menu.js~handleKeydown",
    "access": "public",
    "export": false,
    "importPath": "@nautoguide/ourthings/ourthings/Queueable/W3Menu.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 249,
    "undocument": true,
    "params": [
      {
        "name": "event",
        "types": [
          "*"
        ]
      }
    ],
    "return": null,
    "ignore": true
  },
  {
    "__docId__": 170,
    "kind": "function",
    "name": "handleClick",
    "memberof": "ourthings/Queueable/W3Menu.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "ourthings/Queueable/W3Menu.js~handleClick",
    "access": "public",
    "export": false,
    "importPath": "@nautoguide/ourthings/ourthings/Queueable/W3Menu.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 325,
    "undocument": true,
    "params": [
      {
        "name": "event",
        "types": [
          "*"
        ]
      }
    ],
    "return": null,
    "ignore": true
  },
  {
    "__docId__": 171,
    "kind": "function",
    "name": "handleFocus",
    "memberof": "ourthings/Queueable/W3Menu.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "ourthings/Queueable/W3Menu.js~handleFocus",
    "access": "public",
    "export": false,
    "importPath": "@nautoguide/ourthings/ourthings/Queueable/W3Menu.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 331,
    "undocument": true,
    "params": [
      {
        "name": "event",
        "types": [
          "*"
        ]
      }
    ],
    "return": null,
    "ignore": true
  },
  {
    "__docId__": 172,
    "kind": "function",
    "name": "handleBlur",
    "memberof": "ourthings/Queueable/W3Menu.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "ourthings/Queueable/W3Menu.js~handleBlur",
    "access": "public",
    "export": false,
    "importPath": "@nautoguide/ourthings/ourthings/Queueable/W3Menu.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 335,
    "undocument": true,
    "params": [
      {
        "name": "event",
        "types": [
          "*"
        ]
      }
    ],
    "return": null,
    "ignore": true
  },
  {
    "__docId__": 173,
    "kind": "function",
    "name": "handleMouseover",
    "memberof": "ourthings/Queueable/W3Menu.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "ourthings/Queueable/W3Menu.js~handleMouseover",
    "access": "public",
    "export": false,
    "importPath": "@nautoguide/ourthings/ourthings/Queueable/W3Menu.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 340,
    "undocument": true,
    "params": [
      {
        "name": "event",
        "types": [
          "*"
        ]
      }
    ],
    "return": null,
    "ignore": true
  },
  {
    "__docId__": 174,
    "kind": "function",
    "name": "handleMouseout",
    "memberof": "ourthings/Queueable/W3Menu.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "ourthings/Queueable/W3Menu.js~handleMouseout",
    "access": "public",
    "export": false,
    "importPath": "@nautoguide/ourthings/ourthings/Queueable/W3Menu.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 346,
    "undocument": true,
    "params": [
      {
        "name": "event",
        "types": [
          "*"
        ]
      }
    ],
    "return": null,
    "ignore": true
  },
  {
    "__docId__": 175,
    "kind": "function",
    "name": "PopupMenuAction",
    "memberof": "ourthings/Queueable/W3Menu.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "ourthings/Queueable/W3Menu.js~PopupMenuAction",
    "access": "public",
    "export": false,
    "importPath": "@nautoguide/ourthings/ourthings/Queueable/W3Menu.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 383,
    "undocument": true,
    "params": [
      {
        "name": "domNode",
        "types": [
          "*"
        ]
      },
      {
        "name": "controllerObj",
        "types": [
          "*"
        ]
      }
    ],
    "return": null,
    "ignore": true
  },
  {
    "__docId__": 176,
    "kind": "function",
    "name": "init",
    "memberof": "ourthings/Queueable/W3Menu.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "ourthings/Queueable/W3Menu.js~init",
    "access": "public",
    "export": false,
    "importPath": "@nautoguide/ourthings/ourthings/Queueable/W3Menu.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 428,
    "undocument": true,
    "params": [],
    "return": null,
    "ignore": true
  },
  {
    "__docId__": 177,
    "kind": "function",
    "name": "handleMouseover",
    "memberof": "ourthings/Queueable/W3Menu.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "ourthings/Queueable/W3Menu.js~handleMouseover",
    "access": "public",
    "export": false,
    "importPath": "@nautoguide/ourthings/ourthings/Queueable/W3Menu.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 471,
    "undocument": true,
    "params": [
      {
        "name": "event",
        "types": [
          "*"
        ]
      }
    ],
    "return": null,
    "ignore": true
  },
  {
    "__docId__": 178,
    "kind": "function",
    "name": "handleMouseout",
    "memberof": "ourthings/Queueable/W3Menu.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "ourthings/Queueable/W3Menu.js~handleMouseout",
    "access": "public",
    "export": false,
    "importPath": "@nautoguide/ourthings/ourthings/Queueable/W3Menu.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 475,
    "undocument": true,
    "params": [
      {
        "name": "event",
        "types": [
          "*"
        ]
      }
    ],
    "return": null,
    "ignore": true
  },
  {
    "__docId__": 179,
    "kind": "function",
    "name": "setFocusToController",
    "memberof": "ourthings/Queueable/W3Menu.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "ourthings/Queueable/W3Menu.js~setFocusToController",
    "access": "public",
    "export": false,
    "importPath": "@nautoguide/ourthings/ourthings/Queueable/W3Menu.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 482,
    "undocument": true,
    "params": [
      {
        "name": "command",
        "types": [
          "*"
        ]
      }
    ],
    "return": null,
    "ignore": true
  },
  {
    "__docId__": 180,
    "kind": "function",
    "name": "setFocusToFirstItem",
    "memberof": "ourthings/Queueable/W3Menu.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "ourthings/Queueable/W3Menu.js~setFocusToFirstItem",
    "access": "public",
    "export": false,
    "importPath": "@nautoguide/ourthings/ourthings/Queueable/W3Menu.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 500,
    "undocument": true,
    "params": [],
    "return": null,
    "ignore": true
  },
  {
    "__docId__": 181,
    "kind": "function",
    "name": "setFocusToLastItem",
    "memberof": "ourthings/Queueable/W3Menu.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "ourthings/Queueable/W3Menu.js~setFocusToLastItem",
    "access": "public",
    "export": false,
    "importPath": "@nautoguide/ourthings/ourthings/Queueable/W3Menu.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 504,
    "undocument": true,
    "params": [],
    "return": null,
    "ignore": true
  },
  {
    "__docId__": 182,
    "kind": "function",
    "name": "setFocusToPreviousItem",
    "memberof": "ourthings/Queueable/W3Menu.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "ourthings/Queueable/W3Menu.js~setFocusToPreviousItem",
    "access": "public",
    "export": false,
    "importPath": "@nautoguide/ourthings/ourthings/Queueable/W3Menu.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 508,
    "undocument": true,
    "params": [
      {
        "name": "currentItem",
        "types": [
          "*"
        ]
      }
    ],
    "return": null,
    "ignore": true
  },
  {
    "__docId__": 183,
    "kind": "function",
    "name": "setFocusToNextItem",
    "memberof": "ourthings/Queueable/W3Menu.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "ourthings/Queueable/W3Menu.js~setFocusToNextItem",
    "access": "public",
    "export": false,
    "importPath": "@nautoguide/ourthings/ourthings/Queueable/W3Menu.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 520,
    "undocument": true,
    "params": [
      {
        "name": "currentItem",
        "types": [
          "*"
        ]
      }
    ],
    "return": null,
    "ignore": true
  },
  {
    "__docId__": 184,
    "kind": "function",
    "name": "setFocusByFirstCharacter",
    "memberof": "ourthings/Queueable/W3Menu.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "ourthings/Queueable/W3Menu.js~setFocusByFirstCharacter",
    "access": "public",
    "export": false,
    "importPath": "@nautoguide/ourthings/ourthings/Queueable/W3Menu.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 532,
    "undocument": true,
    "params": [
      {
        "name": "currentItem",
        "types": [
          "*"
        ]
      },
      {
        "name": "char",
        "types": [
          "*"
        ]
      }
    ],
    "return": null,
    "ignore": true
  },
  {
    "__docId__": 185,
    "kind": "function",
    "name": "getIndexFirstChars",
    "memberof": "ourthings/Queueable/W3Menu.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "ourthings/Queueable/W3Menu.js~getIndexFirstChars",
    "access": "public",
    "export": false,
    "importPath": "@nautoguide/ourthings/ourthings/Queueable/W3Menu.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 556,
    "undocument": true,
    "params": [
      {
        "name": "startIndex",
        "types": [
          "*"
        ]
      },
      {
        "name": "char",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 186,
    "kind": "function",
    "name": "open",
    "memberof": "ourthings/Queueable/W3Menu.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "ourthings/Queueable/W3Menu.js~open",
    "access": "public",
    "export": false,
    "importPath": "@nautoguide/ourthings/ourthings/Queueable/W3Menu.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 567,
    "undocument": true,
    "params": [],
    "return": null,
    "ignore": true
  },
  {
    "__docId__": 187,
    "kind": "function",
    "name": "close",
    "memberof": "ourthings/Queueable/W3Menu.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "ourthings/Queueable/W3Menu.js~close",
    "access": "public",
    "export": false,
    "importPath": "@nautoguide/ourthings/ourthings/Queueable/W3Menu.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 581,
    "undocument": true,
    "params": [
      {
        "name": "force",
        "types": [
          "*"
        ]
      }
    ],
    "return": null,
    "ignore": true
  },
  {
    "__docId__": 188,
    "kind": "file",
    "name": "ourthings/Queueable.js",
    "content": "/** @module ourthings/Queueable */\r\n\r\n/**\r\n * @classdesc\r\n *\r\n * The base class for queueable things\r\n *\r\n * @author Richard Reynolds richard@nautoguide.com\r\n *\r\n * @example\r\n * // queue = new Queue();\r\n *\r\n */\r\nclass Queueable {\r\n\r\n\t/**\r\n\t * Constructor, Sets our status to be false (flipped on init)\r\n\t *\r\n\t */\r\n\tconstructor() {\r\n\t\tlet self=this;\r\n\t\tself.ready=false;\r\n\t}\r\n\r\n\t/**\r\n\t * init, override this for any promise based inits setting\r\n\t * the self.ready=true after the promise\r\n\t *\r\n\t */\r\n\tinit(queue) {\r\n\t\tlet self=this;\r\n\t\tself.queue=queue;\r\n\t\tself.ready=true;\r\n\t}\r\n\r\n\t/**\r\n\t * Called from queue, starts running the actual command\r\n\t * @param pid\r\n\t * @param command\r\n\t * @param json\r\n\t */\r\n\tstart(pid,command,json) {\r\n\t\tlet self=this;\r\n\t\tif(self[command]&&typeof self[command] === 'function') {\r\n\r\n\t\t\t/*\r\n\t\t\t * Pass the json through the var processor\r\n\t\t\t */\r\n\r\n\t\t\tjson=JSON.parse(self.queue.templateVars(JSON.stringify(json)));\r\n\t\t\t/*\r\n\t\t\t * Execute\r\n\t\t\t */\r\n\t\t\tself[command](pid, json);\r\n\t\t} else {\r\n\t\t\tself.queue.finished(pid,self.queue.DEFINE.FIN_ERROR,'No such command ['+command+']');\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Call this method after you command has finished. Failure to do so will result is\r\n\t * a stalled queue\r\n\t * @param pid\r\n\t * @param mode\r\n\t */\r\n\tfinished(pid,mode,error='') {\r\n\t\tlet self=this;\r\n\t\tself.queue.finished(pid,mode,error);\r\n\t}\r\n\r\n\tset(pid,value) {\r\n\t\tlet self=this;\r\n\t\tself.queue.memory(pid,value);\r\n\t}\r\n}\r\n\r\nexport default Queueable;",
    "static": true,
    "longname": "C:/Users/xrout/Dropbox/machine/Work/webstorm/ourthings/src/ourthings/Queueable.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 189,
    "kind": "class",
    "name": "Queueable",
    "memberof": "ourthings/Queueable.js",
    "static": true,
    "longname": "ourthings/Queueable.js~Queueable",
    "access": "public",
    "export": true,
    "importPath": "@nautoguide/ourthings/ourthings/Queueable.js",
    "importStyle": "Queueable",
    "description": "",
    "examples": [
      "// queue = new Queue();"
    ],
    "lineNumber": 14,
    "unknown": [
      {
        "tagName": "@classdesc",
        "tagValue": "\nThe base class for queueable things"
      },
      {
        "tagName": "@author",
        "tagValue": "Richard Reynolds richard@nautoguide.com"
      }
    ],
    "interface": false
  },
  {
    "__docId__": 190,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "ourthings/Queueable.js~Queueable",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "ourthings/Queueable.js~Queueable#constructor",
    "access": "public",
    "description": "Constructor, Sets our status to be false (flipped on init)",
    "lineNumber": 20
  },
  {
    "__docId__": 191,
    "kind": "method",
    "name": "init",
    "memberof": "ourthings/Queueable.js~Queueable",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "ourthings/Queueable.js~Queueable#init",
    "access": "public",
    "description": "init, override this for any promise based inits setting\nthe self.ready=true after the promise",
    "lineNumber": 30,
    "params": [
      {
        "name": "queue",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 192,
    "kind": "method",
    "name": "start",
    "memberof": "ourthings/Queueable.js~Queueable",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "ourthings/Queueable.js~Queueable#start",
    "access": "public",
    "description": "Called from queue, starts running the actual command",
    "lineNumber": 42,
    "params": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "pid",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "command",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "json",
        "description": ""
      }
    ],
    "return": null
  },
  {
    "__docId__": 193,
    "kind": "method",
    "name": "finished",
    "memberof": "ourthings/Queueable.js~Queueable",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "ourthings/Queueable.js~Queueable#finished",
    "access": "public",
    "description": "Call this method after you command has finished. Failure to do so will result is\na stalled queue",
    "lineNumber": 66,
    "params": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "pid",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "mode",
        "description": ""
      }
    ],
    "return": null
  },
  {
    "__docId__": 194,
    "kind": "method",
    "name": "set",
    "memberof": "ourthings/Queueable.js~Queueable",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "ourthings/Queueable.js~Queueable#set",
    "access": "public",
    "description": null,
    "lineNumber": 71,
    "undocument": true,
    "params": [
      {
        "name": "pid",
        "types": [
          "*"
        ]
      },
      {
        "name": "value",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "kind": "index",
    "content": "# OurThings\r\nQueue based JavaScript framework\r\n\r\n# Intro\r\nOurThings is a queue based javascript framework designed to take the legwork out of AJAX apps. Originally a closed commercial framework, we are rewriting it and giving it to the world.\r\n\r\n# Purpose\r\nAfter creating ajax site after site we realised that we were repeating the same blocks of code, over and over and always ending up in the same code tangle. Do this, then do this, do that, then call this same piece of code but do something slightly different. After boiling down what we did it became obvious that what every app needed was:\r\n- A queue system\r\n- Flexible code blocks that can be reused\r\n- Common method of passing data between code and UI\r\n- Way to stop coders breaking the UI responsiveness\r\n\r\nWe also wanted to detach the framework from a need to use javascript. Our UX designers were spending time either writing bad javascript or having to get coders involved for even the most basic of tasks. Thus we wanted to give HTML/CSS users access to the framework in a language they already understand.\r\n\r\n# Documentation\r\n[Documentation Site](https://nautoguide.github.io/ourthings/)",
    "longname": "C:\\Users\\xrout\\Dropbox\\machine\\Work\\webstorm\\ourthings\\README.md",
    "name": "./README.md",
    "static": true,
    "access": "public"
  },
  {
    "kind": "packageJSON",
    "content": "{\r\n  \"name\": \"@nautoguide/ourthings\",\r\n  \"version\": \"0.1.7\",\r\n  \"description\": \"Queue based JavaScript framework\",\r\n  \"scripts\": {\r\n    \"build\": \"webpack --config webpack.config.basic.js\",\r\n    \"buildbabel\": \"webpack\",\r\n    \"apidoc\": \"esdoc\",\r\n    \"testserver\": \"http-server -p 4040 ./\",\r\n    \"test\": \"mocha-headless-chrome -f http://localhost:4040/test/test.html -o test/out.res -v\",\r\n    \"headlesstest\": \"mocha-headless-chrome -f http://localhost:8080/test/test.html -o test/out.res\",\r\n    \"dopublish\": \"node prepublish.js && npm publish src/ourthings && node postpublish.js\",\r\n    \"dopublish-dry\": \"node prepublish.js && npm publish src/ourthings --dry-run && node postpublish.js\",\r\n    \"devmode\": \"node devmode.js\",\r\n    \"clean\": \"node clean.js\"\r\n  },\r\n  \"main\": \"index.js\",\r\n  \"repository\": {\r\n    \"type\": \"git\",\r\n    \"url\": \"git://github.com/nautoguide/ourthings.git\"\r\n  },\r\n  \"bugs\": {\r\n    \"url\": \"https://github.com/nautoguide/ourthings/issues\"\r\n  },\r\n  \"license\": \"GPLv3\",\r\n  \"devDependencies\": {\r\n    \"chai\": \"^4.2.0\",\r\n    \"esdoc\": \"^1.1.0\",\r\n    \"esdoc-standard-plugin\": \"^1.0.0\",\r\n    \"mocha\": \"^5.2.0\",\r\n    \"mocha-headless-chrome\": \"^2.0.1\",\r\n    \"ol\": \"^5.3.1\",\r\n    \"proj4\": \"^2.5.0\",\r\n    \"path\": \"^0.12.7\",\r\n    \"webpack\": \"^4.26.1\",\r\n    \"shelljs\": \"^0.8.3\",\r\n    \"webpack-cli\": \"^3.1.2\",\r\n    \"webpack-dev-server\": \"^3.1.9\",\r\n    \"@babel/core\": \"^7.3.4\",\r\n    \"@babel/preset-env\": \"^7.3.4\",\r\n    \"babel-polyfill\": \"^7.0.0-beta.3\",\r\n    \"babel-loader\": \"^8.0.5\",\r\n    \"whatwg-fetch\": \"^3.0.0\",\r\n    \"http-server\": \"^0.11.1\"\r\n  },\r\n  \"publishConfig\": {\r\n    \"access\": \"public\"\r\n  }\r\n}\r\n",
    "longname": "C:\\Users\\xrout\\Dropbox\\machine\\Work\\webstorm\\ourthings\\package.json",
    "name": "package.json",
    "static": true,
    "access": "public"
  }
]